{"version":3,"sources":["pages/Help/styles.module.css","../../src/createRawHexGrid.ts","../../src/mercatorProjection.ts","../../src/Tile.ts","../../src/TilesArray.ts","components/areaselect/areaselect.js","redux/types.ts","redux/modules/leaflet/selectors.ts","redux/modules/settings/index.ts","components/Map/utils.ts","components/Map/hooks.ts","components/Map/index.tsx","redux/modules/map/actions.ts","redux/modules/map/selectors.ts","redux/modules/map/thunkActions.ts","redux/modules/map/reducers.ts","components/Options/TileSlider.tsx","constants/colors.js","components/Options/TileInput.tsx","components/Options/SelectMenu.tsx","components/ControlButtons/index.tsx","components/Button/index.tsx","components/Options/index.tsx","redux/modules/map/dispatch.ts","constants/values.ts","redux/modules/leaflet/index.ts","components/MapLoader/index.tsx","redux/modules/leaflet/actionTypes.tsx","components/Dock/index.tsx","baseweb/index.tsx","v2-components/ToastError/index.tsx","pages/MapPage/index.tsx","pages/About/index.tsx","components/InstructionList/PathInstruction.tsx","components/InstructionList/Base.tsx","components/InstructionList/Civ5InstructionList.tsx","components/InstructionList/Civ6InstructionList.tsx","pages/Help/index.tsx","serviceWorker.ts","redux/rootReducer.ts","index.tsx","redux/store.ts","index.module.css","pages/About/styles.module.css","components/Options/styles.module.css","components/MapLoader/styles.module.css","pages/MapPage/styles.module.css","../../src/types.ts","components/Button/styles.module.css","v2-components/ToastError/styles.module.css","components/InstructionList/styles.module.css","components/Dock/styles.module.css","../../src/index.ts","components/ControlButtons/styles.module.css"],"names":["module","exports","tile","col","this","L","AreaSelect","Class","extend","includes","Mixin","Events","options","width","height","keepAspectRatio","initialize","Util","setOptions","_width","_height","addTo","map","_createElements","_render","getBounds","size","getSize","topRight","Point","bottomLeft","x","Math","round","y","sw","containerPointToLatLng","ne","LatLngBounds","remove","off","_onMapChange","_onMapResize","_container","parentNode","removeChild","setDimensions","dimensions","parseInt","fire","DomUtil","create","_controlContainer","_topShade","_bottomShade","_leftShade","_rightShade","_nwHandle","_swHandle","_neHandle","_seHandle","_setUpHandlerEvents","on","handle","xMod","yMod","self","DomEvent","addListener","onMouseDown","event","stopPropagation","dragging","disable","removeListener","curX","pageX","curY","pageY","ratio","onMouseMove","maxHeight","originalEvent","max","min","onMouseUp","enable","handleOffset","offsetWidth","topBottomHeight","leftRightWidth","element","dimension","style","top","left","bottom","right","areaSelect","SubmissionStatus","hasLayer","layers","layer","receivedLayersSelector","state","mapData","_","fromPairs","Object","values","MapLayers","filter","key","selectedLayer","layerName","leaflet","undefined","mapFeatureToStyle","feature","properties","color","terrain","TerrainType","coast","ocean","grass","plains","desert","tundra","ice","elevation","Elevation","flat","fillColor","hills","fillOpacity","mountain","terrainFeature","FeatureType","forest","jungle","marsh","rivers","river","isEqual","initialState","format","bounds","_southWest","lat","lng","_northEast","changeOptions","type","payload","drawLayer","grid","geoJSON","features","hex","i","geometry","useLayer","initialLayer","useState","setLayer","previousLayer","setPreviousLayer","useEffect","removeLayer","useCallback","newLayer","useRiverLayer","riverLines","setRivers","leafletLayer","opacity","drawRivers","usePreviewLayer","onBoundsChange","settings","useMemo","createRawHexGrid","lon_start","getWest","lon_end","getEast","lat_start","getNorth","lat_end","getSouth","createPreviewGrid","setPreview","handler","useDebounce","mapDispatchToProps","connect","submissionStatus","setMap","setView","tileLayer","attribution","setTimeout","invalidateSize","useLeafletMap","previous","setPrevious","none","useAreaSelect","useTileLayer","id","submitError","errorMessage","loadingLayer","index","name","errored","receiveLayerAction","data","progress","totalLayers","done","createEventSource","callback","eventSource","EventSource","addEventListener","removeEventListener","splitRivers","dispatch","getState","lines","receiveRiverLines","flatMap","poly","entries","direction","mapRiverToLine","elem","receiveLayer","e","a","JSON","parse","console","log","TileSlider","value","onChange","rest","overrides","Root","Track","paddingTop","paddingLeft","paddingRight","paddingBottom","marginRight","TickBar","InnerThumb","ThumbValue","InnerTrack","background","Thumb","display","alignItems","justifyContent","borderStyle","borderWidth","borderColor","backgroundColor","TileInput","React","typedValue","setTypedValue","focused","setFocused","numberValue","isValid","endEnhancer","target","slice","onBlur","Number","isNaN","clamped","clamp","onFocus","SIZE","mini","error","marginLeft","marginTop","EndEnhancer","fontFamily","fontSize","Input","InputContainer","formatDisplayNames","gameStrings","label","clearable","searchable","val","Popover","props","Body","zIndex","padding","borderRadius","ValueContainer","ControlContainer","border","IconsContainer","SelectArrow","DropdownContainer","SearchIconContainer","Dropdown","DropdownListItem","OptionContent","ControlButtons","children","className","styles","btn_container","Button","primary","primary_button","button","widthParams","onSubmit","submitting","fetch","method","headers","body","stringify","then","resp","json","res","removeSSEListener","nLayers","mapId","receiveLayers","resetOptions","InputRow","selectedOptions","title","field","horizontal_containers","left_headers","header","onClick","onLayerSelect","downloadMap","status","filename","get","split","blob","download","resetMap","receivedLayers","downloaded","setDownloaded","component_array","enabled","button_selected","disabled","successValue","BarProgress","position","backgroundcolor","Bar","$theme","sizing","scale300","mapInProgress","container","Options","engine","Styletron","BaseWeb","theme","LightTheme","ToastError","msg","info","href","textDecoration","toaster","clear","toastID","compact","BaseButton","negative","onClose","InnerContainer","placement","PLACEMENT","ToastBody","colors","toastNegativeBackground","boxShadow","MapPage","page","map_container","bottom_bar","About","intro","landing_header","landing_subtitle","to","controls","src","PathInstruction","os","path","Step","step","level","isValidElement","instruction","BaseInstructionList","steps","hideTitle","ListType","HeaderType","instructionList","paths","Mac","Windows","civVHelpText","Base","civ6HelpText","tabStyle","borderBottomColor","OSTabs","activeKey","TabBar","TabContent","Tab","contentsContainer","civ5Instructions","Civ5InstructionList","civ6Instructions","Civ6InstructionList","FAQ","questionHeader","answerText","Help","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","keys","ReactDOM","render","store","createStore","composeWithDevTools","applyMiddleware","thunk","top_bar","header_container","logo","alt","space","menu_item_container","button_container","menu_item","activeClassName","menu_item_selected","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kNACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,oBAAsB,oCAAoC,UAAY,0BAA0B,mBAAqB,mCAAmC,WAAa,2BAA2B,MAAQ,sBAAsB,eAAiB,+BAA+B,kBAAoB,kCAAkC,iBAAmB,iCAAiC,iBAAmB,iCAAiC,KAAO,qBAAqB,eAAiB,+BAA+B,WAAa,6B,6CCqDzjB,SAAgB,EAAS,EAAmB,EAAiB,GAE3D,IAAI,GAAQ,EAAU,GAAa,EAIjC,OAFA,EAAM,EAAO,GAAU,EAAQ,IAKnC,SAAgB,EACd,EACA,EACA,EACA,GAAc,QAEG,EAFH,GAEP,EAFO,KAEH,EAFG,KAGd,OAAO,EAAQ,KAAI,SAAC,GAAU,QACb,EADa,GACrB,EADqB,KAClB,EADkB,KAE5B,MAAO,CAAC,EAAK,EAAI,EAAQ,EAAK,EAAI,MAkCtC,SAAgB,EACd,EACA,EACA,GAEA,MAAO,CACL,KAAM,UACN,YAAa,CAAC,EAAW,UAAS,EAAO,EAAQ,K,iDAhGrD,+BAgBI,IATO,IANT,EAMO,EANP,MACA,EAKO,EALP,OACA,EAIO,EAJP,UACA,EAGO,EAHP,QACA,EAEO,EAFP,UACA,EACO,EADP,QAEI,EAAS,EAAS,EAAW,EAAS,GACpC,EAAS,EAAS,EAAS,EAAW,GAAU,IAGhD,EAAW,EADD,UAAQ,GAAG,GAAK,EAG5B,EAAQ,GAEH,EAAM,EAAG,EAAM,EAAQ,IAU9B,IARA,IAEI,EAAgB,EAFH,EAAM,IAAM,EAAI,GAAM,EAAS,GAGjC,EACb,EAAoB,IAAT,EAAgB,GAIpB,EAAM,EAAG,EAAM,EAAO,IAAO,CACpC,IAAM,EAAM,EAAc,EAAO,EAAQ,GAEzC,EAAM,KAAK,GACX,EAAQ,CAAC,EAAM,GAAK,EAAQ,EAAM,IAIpC,OAAK,GAGT,aASA,eAaa,UAAoB,CAE/B,CAAC,EAAG,GACJ,CAAC,GAAK,KACN,CAAC,EAAG,GACJ,CAAC,GAAI,IACL,CAAC,IAAM,KACP,CAAC,GAAI,IACL,CAAC,EAAG,IAGO,iBAAiB,SAC5B,EACA,GAEA,IAAM,EAAQ,CACZ,UAAW,EACX,UAAW,EACX,KAAM,EACN,UAAW,EACX,UAAW,EACX,KAAM,GACN,GAEF,MAAO,CACL,KAAM,aACN,YAHkB,EAAK,YAAY,GAAG,MAAM,EAAO,EAAQ,KAO/D,mB,kFC1GA,IAGM,EAAkB,SAAC,EAAiB,GAEtC,OAJQ,SAAC,GAAD,OAAsB,IAAM,EAAW,KAAK,GAI/C,CAAI,EALD,SAAC,GAAD,OAAsB,KAAK,GAAK,EAAW,IAIrC,CAAI,MAIT,kBAAkB,SAAC,GAAD,OAC7B,EACE,GACA,SAAC,GAAD,OAAiB,EAAI,KAAK,KAAK,KAAK,IAAI,IAAQ,GAAM,KAAK,OAGlD,yBAAyB,SAAC,GACrC,EAAgB,GAAG,SAAC,GAAD,OACjB,KAAK,IAAI,KAAK,IAAI,GAAO,EAAI,KAAK,IAAI,S,8FChB1C,YACA,QAEa,E,wBAAb,cACS,UAAU,SAAC,GAAD,OACf,EAAK,UAAY,cAAY,OAAS,EAAK,UAAY,cAAY,OAE9D,UAAU,SAAC,GAAD,YACI,IAAnB,EAAK,WAA2B,EAAK,YAAc,YAAU,MAExD,eAAe,SAACC,GAAD,OACpB,EAAK,YAAc,YAAU,UAAY,EAAK,UAAY,cAAY,KAEjE,cAAc,SAAC,GAAD,OAClB,EAAU,QAAQ,KAClB,EAAU,aAAa,IACxB,EAAK,UAAY,cAAY,OAC7B,EAAK,UAAY,cAAY,Q,yICjBjC,aAEa,E,WAIT,SAAF,EAAY,EAAiB,GAAa,qBActC,KAAJ,KAAO,WACC,IADI,EACJ,EAAS,GADL,IAEQ,QAAM,EAAG,EAAK,SAFtB,IAEV,gCAAW,EAAX,QACE,EAAO,KAAK,EAAK,OAAO,MAAM,EAAM,EAAK,OAAQ,EAAM,GAAK,EAAK,SAHzD,8BAIJ,OAAC,GAGL,KAAJ,MAAQ,kBAAM,IAAI,EAAW,EAAK,OAAQ,EAAK,QAE3C,KAAJ,UAAY,SAAC,GAAD,OACV,IAAI,EAAc,IAAI,MAAM,EAAK,OAAO,QAAQ,KAAK,GAAQ,EAAK,QA+ChE,KAAJ,KAAO,SAAC,EAAa,GAGnB,MAAO,CAFS,EACA,EAAM,IAIpB,KAAJ,MAAQ,SAAC,EAAa,GAGpB,MAAO,CAFS,EACA,EAAM,IAIpB,KAAJ,QAAU,SAAC,EAAa,GAGhB,MAAC,CAFS,EAAM,EACN,EAAM,IAAM,EAAI,EAAM,EAAM,IAI1C,KAAJ,SAAW,SAAC,EAAa,GAGvB,MAAO,CAFS,EAAM,EACN,EAAM,IAAM,EAAI,EAAM,EAAI,IAIxC,KAAJ,WAAa,SAAC,EAAa,GAGnB,MAAC,CAFS,EAAM,EACN,EAAM,IAAM,EAAI,EAAM,EAAM,IAI1C,KAAJ,YAAc,SAAC,EAAa,GAG1B,MAAO,CAFS,EAAM,EACN,EAAM,IAAM,EAAI,EAAM,EAAI,IAI5C,eAAY,SAAC,EAAa,GAAd,OACV,EAAK,mBAAL,QAAI,EAAuB,EAAK,KAAK,EAAK,MAExC,KAAJ,WAAa,SAAC,EAAa,GAAd,OACX,EAAK,mBAAL,QAAI,EAAuB,EAAK,MAAM,EAAK,MAE7C,kBAAe,SAAC,EAAa,GAAd,OACb,EAAK,mBAAL,QAAI,EAAuB,EAAK,QAAQ,EAAK,MAE/C,mBAAgB,SAAC,EAAa,GAAd,OACd,EAAK,mBAAL,QAAI,EAAuB,EAAK,SAAS,EAAK,MAEhD,qBAAkB,SAAC,EAAa,GAAd,OAChB,EAAK,mBAAL,QAAI,EAAuB,EAAK,WAAW,EAAK,MAElD,sBAAmB,SAAC,EAAa,GAAd,OACjB,EAAK,mBAAL,QAAI,EAAuB,EAAK,YAAY,EAAK,MA1H7C,KAAC,OAAS,EACV,KAAC,MAAQ,E,sCAwBJ,GAEH,OAAC,IAAI,EADI,KAAK,OAAO,IAAI,GACE,KAAK,S,+BAG/B,EAAa,GACpB,OAAO,EAAM,KAAK,MAAQ,I,0BAGxB,EAAa,GACf,OAAO,KAAK,OAAO,KAAK,SAAS,EAAK,M,yCAGrB,EAAaC,GAC9B,GAAIC,KAAK,SAAS,EAAK,GAAM,OAAO,KAAK,IAAI,EAAK,K,0BAGhD,EAAa,EAAa,GAC5B,KAAK,OAAO,EAAM,KAAK,MAAQ,GAAO,I,+BAO/B,EAAa,GACpB,OAAO,GAAO,GAAK,GAAO,GAAK,EAAM,KAAK,OAAS,EAAM,KAAK,S,gDAI9D,EACA,G,uFAEM,EAAM,EAAE,EAAG,EAAG,GAAI,GAClB,EAAM,CAAC,GAAI,EAAG,EAAG,GAEnB,EAAI,EACJ,EAAI,E,IAEe,MAAI,EAAK,I,2EAApB,E,KAAI,E,KACR,EAAyB,CAAE,GAAa,EAAM,GAAa,IAC7D,KAAK,SAAL,WAAiB,G,iBAAO,O,UAAM,E,iPA0D3B,EAAa,G,2EAChB,EAAQ,CACZ,KAAK,KAAK,EAAK,GACf,KAAK,QAAQ,EAAK,GAClB,KAAK,SAAS,EAAK,GACnB,KAAK,MAAM,EAAK,GAChB,KAAK,YAAY,EAAK,GACtB,KAAK,WAAW,EAAK,I,MAGJ,E,4CAAR,E,MACL,KAAK,SAAL,aAAiB,I,gBAAO,O,SAAM,E,0MAKpC,E,+BAAQ,CAAC,EAAG,GACZ,E,+BAAM,CAAC,KAAK,OAAQ,KAAK,OAEzB,EAAQ,EAAM,KAAI,SAAC,GAAD,OAAS,KAAK,IAAI,EAAG,MACvC,EAAM,EAAI,KAAI,SAAC,GAAD,OAAS,KAAK,IAAI,MACvB,EAAI,EAAM,G,YAAI,EAAI,EAAI,I,iBACpB,EAAI,EAAM,G,YAAI,EAAI,EAAI,I,iBAC7B,O,UAAM,CAAC,EAAG,G,QADuB,I,uBADF,I,oGAOhC,G,qEACM,EAAI,E,YAAG,EAAI,KAAK,O,gBACvB,O,SAAM,KAAK,IAAI,EAAK,G,OADU,I,2KAMvB,EAAI,E,YAAG,EAAI,KAAK,Q,gBACvB,O,SAAM,KAAK,IAAI,G,OADgB,I,4FAhHjC,OAAO,KAAK,OAAO,OAAS,KAAK,U,KApDrC,eASS,iBAAiB,SAAI,EAAe,EAAgB,GAAnC,OACtB,IAAI,EAAW,MAAM,EAAQ,GAAQ,KAAK,GAAe,IAEpD,SAAS,SAAI,GAAJ,OACd,IAAI,EACF,EAAW,QAAO,SAAC,EAAO,GAAR,kBAAsB,GAAtB,EAAgC,MAAQ,IAC1D,EAAW,OAAS,EAAI,EAAW,GAAG,OAAS,K,uICfrDC,IAAEC,WAAaD,IAAEE,MAAMC,OAAO,CAC5BC,SAAUJ,IAAEK,MAAMC,OAElBC,QAAS,CACPC,MAAO,IACPC,OAAQ,IACRC,iBAAiB,GAGnBC,WAAY,SAAUJ,GACpBP,IAAEY,KAAKC,WAAWd,KAAMQ,GAExBR,KAAKe,OAASf,KAAKQ,QAAQC,MAC3BT,KAAKgB,QAAUhB,KAAKQ,QAAQE,QAG9BO,MAAO,SAAUC,GAIf,OAHAlB,KAAKkB,IAAMA,EACXlB,KAAKmB,kBACLnB,KAAKoB,UACEpB,MAGTqB,UAAW,WACT,IAAIC,EAAOtB,KAAKkB,IAAIK,UAChBC,EAAW,IAAIvB,IAAEwB,MACjBC,EAAa,IAAIzB,IAAEwB,MAEvBC,EAAWC,EAAIC,KAAKC,OAAOP,EAAKK,EAAI3B,KAAKe,QAAU,GACnDS,EAASM,EAAIF,KAAKC,OAAOP,EAAKQ,EAAI9B,KAAKgB,SAAW,GAClDQ,EAASG,EAAIL,EAAKK,EAAID,EAAWC,EACjCD,EAAWI,EAAIR,EAAKQ,EAAIN,EAASM,EAEjC,IAAIC,EAAK/B,KAAKkB,IAAIc,uBAAuBN,GACrCO,EAAKjC,KAAKkB,IAAIc,uBAAuBR,GAEzC,OAAO,IAAIvB,IAAEiC,aAAaH,EAAIE,IAGhCE,OAAQ,WACNnC,KAAKkB,IAAIkB,IAAI,UAAWpC,KAAKqC,cAC7BrC,KAAKkB,IAAIkB,IAAI,UAAWpC,KAAKqC,cAC7BrC,KAAKkB,IAAIkB,IAAI,SAAUpC,KAAKsC,cAE5BtC,KAAKuC,WAAWC,WAAWC,YAAYzC,KAAKuC,aAG9CG,cAAe,SAAUC,GAClBA,IAEL3C,KAAKgB,QAAU4B,SAASD,EAAWjC,SAAWV,KAAKgB,QACnDhB,KAAKe,OAAS6B,SAASD,EAAWlC,QAAUT,KAAKe,OACjDf,KAAKoB,UACLpB,KAAK6C,KAAK,YAGZ1B,gBAAiB,WACTnB,KAAKuC,aAEXvC,KAAKuC,WAAatC,IAAE6C,QAAQC,OAC1B,MACA,+BACA/C,KAAKkB,IAAI8B,mBAEXhD,KAAKiD,UAAYhD,IAAE6C,QAAQC,OACzB,MACA,2CACA/C,KAAKuC,YAEPvC,KAAKkD,aAAejD,IAAE6C,QAAQC,OAC5B,MACA,2CACA/C,KAAKuC,YAEPvC,KAAKmD,WAAalD,IAAE6C,QAAQC,OAC1B,MACA,2CACA/C,KAAKuC,YAEPvC,KAAKoD,YAAcnD,IAAE6C,QAAQC,OAC3B,MACA,2CACA/C,KAAKuC,YAGPvC,KAAKqD,UAAYpD,IAAE6C,QAAQC,OACzB,MACA,4CACA/C,KAAKuC,YAEPvC,KAAKsD,UAAYrD,IAAE6C,QAAQC,OACzB,MACA,4CACA/C,KAAKuC,YAEPvC,KAAKuD,UAAYtD,IAAE6C,QAAQC,OACzB,MACA,4CACA/C,KAAKuC,YAEPvC,KAAKwD,UAAYvD,IAAE6C,QAAQC,OACzB,MACA,4CACA/C,KAAKuC,YAGPvC,KAAKyD,oBAAoBzD,KAAKqD,WAC9BrD,KAAKyD,oBAAoBzD,KAAKuD,WAAY,EAAG,GAC7CvD,KAAKyD,oBAAoBzD,KAAKsD,UAAW,GAAI,GAC7CtD,KAAKyD,oBAAoBzD,KAAKwD,WAAY,GAAI,GAE9CxD,KAAKkB,IAAIwC,GAAG,UAAW1D,KAAKqC,aAAcrC,MAC1CA,KAAKkB,IAAIwC,GAAG,UAAW1D,KAAKqC,aAAcrC,MAC1CA,KAAKkB,IAAIwC,GAAG,SAAU1D,KAAKsC,aAActC,MAEzCA,KAAK6C,KAAK,YAGZY,oBAAqB,SAAUE,EAAQC,EAAMC,GAC3CD,EAAOA,GAAQ,EACfC,EAAOA,GAAQ,EAEf,IAAIC,EAAO9D,KA0CXC,IAAE8D,SAASC,YAAYL,EAAQ,aAzC/B,SAASM,EAAYC,GACnBA,EAAMC,kBACNL,EAAK5C,IAAIkD,SAASC,UAClBpE,IAAE8D,SAASO,eAAetE,KAAM,YAAaiE,GAC7C,IAAIM,EAAOL,EAAMM,MACbC,EAAOP,EAAMQ,MACbC,EAAQb,EAAK/C,OAAS+C,EAAK9C,QAC3BM,EAAOwC,EAAK5C,IAAIK,UAEpB,SAASqD,EAAYV,GACnB,GAAIJ,EAAKtD,QAAQG,gBAAiB,CAChC,IAAIkE,GACDf,EAAK9C,SAAW8C,EAAK/C,OAASO,EAAKQ,EAAIR,EAAKQ,GAAK,EAAI6C,IAAU,GAClEb,EAAK9C,SAAgD,GAApCyD,EAAOP,EAAMY,cAAcJ,OAAab,EACzDC,EAAK9C,QAAUY,KAAKmD,IAAI,GAAIjB,EAAK9C,SACjC8C,EAAK9C,QAAUY,KAAKoD,IAAIH,EAAWf,EAAK9C,SACxC8C,EAAK/C,OAAS+C,EAAK9C,QAAU2D,OAE7Bb,EAAK/C,QAA+C,GAApCwD,EAAOL,EAAMY,cAAcN,OAAaZ,EACxDE,EAAK9C,SAAgD,GAApCyD,EAAOP,EAAMY,cAAcJ,OAAab,EACzDC,EAAK/C,OAASa,KAAKmD,IAAI,GAAIjB,EAAK/C,QAChC+C,EAAK9C,QAAUY,KAAKmD,IAAI,GAAIjB,EAAK9C,SACjC8C,EAAK/C,OAASa,KAAKoD,IAAI1D,EAAKK,EAAI,GAAImC,EAAK/C,QACzC+C,EAAK9C,QAAUY,KAAKoD,IAAI1D,EAAKQ,EAAI,GAAIgC,EAAK9C,SAG5CuD,EAAOL,EAAMY,cAAcN,MAC3BC,EAAOP,EAAMY,cAAcJ,MAC3BZ,EAAK1C,UAUPnB,IAAE8D,SAASC,YAAYF,EAAK5C,IAAK,YAAa0D,GAC9C3E,IAAE8D,SAASC,YAAYF,EAAK5C,IAAK,WATjC,SAAS+D,EAAUf,GACjBJ,EAAK5C,IAAIkD,SAASc,SAClBjF,IAAE8D,SAASO,eAAeR,EAAK5C,IAAK,UAAW+D,GAC/ChF,IAAE8D,SAASO,eAAeR,EAAK5C,IAAK,YAAa0D,GACjD3E,IAAE8D,SAASC,YAAYL,EAAQ,YAAaM,GAC5CH,EAAKjB,KAAK,iBAShBP,aAAc,WACZtC,KAAKoB,WAGPiB,aAAc,WACZrC,KAAK6C,KAAK,WAGZzB,QAAS,WACP,IAAIE,EAAOtB,KAAKkB,IAAIK,UAChB4D,EAAevD,KAAKC,MAAM7B,KAAKqD,UAAU+B,YAAc,GAEvDC,EAAkBzD,KAAKC,OAAOP,EAAKQ,EAAI9B,KAAKgB,SAAW,GACvDsE,EAAiB1D,KAAKC,OAAOP,EAAKK,EAAI3B,KAAKe,QAAU,GAEzD,SAAS2B,EAAc6C,EAASC,GAC9BD,EAAQE,MAAMhF,MAAQ+E,EAAU/E,MAAQ,KACxC8E,EAAQE,MAAM/E,OAAS8E,EAAU9E,OAAS,KAC1C6E,EAAQE,MAAMC,IAAMF,EAAUE,IAAM,KACpCH,EAAQE,MAAME,KAAOH,EAAUG,KAAO,KACtCJ,EAAQE,MAAMG,OAASJ,EAAUI,OAAS,KAC1CL,EAAQE,MAAMI,MAAQL,EAAUK,MAAQ,KAG1CnD,EAAc1C,KAAKiD,UAAW,CAC5BxC,MAAOa,EAAKK,EACZjB,OAAQ2E,EACRK,IAAK,EACLC,KAAM,IAERjD,EAAc1C,KAAKkD,aAAc,CAC/BzC,MAAOa,EAAKK,EACZjB,OAAQ2E,EACRO,OAAQ,EACRD,KAAM,IAERjD,EAAc1C,KAAKmD,WAAY,CAC7B1C,MAAO6E,EACP5E,OAAQY,EAAKQ,EAAsB,EAAlBuD,EACjBK,IAAKL,EACLM,KAAM,IAERjD,EAAc1C,KAAKoD,YAAa,CAC9B3C,MAAO6E,EACP5E,OAAQY,EAAKQ,EAAsB,EAAlBuD,EACjBK,IAAKL,EACLQ,MAAO,IAGTnD,EAAc1C,KAAKqD,UAAW,CAC5BsC,KAAML,EAAiBH,EACvBO,IAAKL,EAAkB,IAEzB3C,EAAc1C,KAAKuD,UAAW,CAC5BsC,MAAOP,EAAiBH,EACxBO,IAAKL,EAAkB,IAEzB3C,EAAc1C,KAAKsD,UAAW,CAC5BqC,KAAML,EAAiBH,EACvBS,OAAQP,EAAkB,IAE5B3C,EAAc1C,KAAKwD,UAAW,CAC5BqC,MAAOP,EAAiBH,EACxBS,OAAQP,EAAkB,OAKhCpF,IAAE6F,WAAa,SAAUtF,GACvB,OAAO,IAAIP,IAAEC,WAAWM,I,yBC7MduF,E,+BClBCC,EAAW,SAACC,EAAoBC,GAArB,QACtBD,EAAOC,IAEIC,EAAyB,SAACC,GACrC,IAAMH,EAASG,EAAMC,QAAQJ,OAM7B,OALgDK,IAAEC,UAC/CC,OAAOC,OAAOC,aACZC,QAAO,SAACC,GAAD,MAAuC,kBAARA,KACtC1F,KAAI,SAAC0F,GAAD,MAAwB,CAACA,EAAKZ,EAASC,EAAQW,SAK7CC,EAAgB,SAACT,GAC5B,IAAMU,EAAYV,EAAMW,QAAQF,cAChC,YAAqBG,IAAdF,EAA0B,GAAKV,EAAMC,QAAQJ,OAAOa,IAAc,IAG9DG,EAAqC,SAChDC,GAEA,QAAgBF,IAAZE,QAAgDF,IAAvBE,EAAQC,WACnC,MAAO,GAEP,IAAMC,EAAS,WACb,OAAQF,EAAQC,WAAWE,SACzB,KAAKC,cAAYC,MACf,MAAO,CAAEH,MAAO,QAClB,KAAKE,cAAYE,MACf,MAAO,CAAEJ,MAAO,QAClB,KAAKE,cAAYG,MACf,MAAO,CAAEL,MAAO,SAClB,KAAKE,cAAYI,OACf,MAAO,CAAEN,MAAO,QAClB,KAAKE,cAAYK,OACf,MAAO,CAAEP,MAAO,cAClB,KAAKE,cAAYM,OACf,MAAO,CAAER,MAAO,QAClB,KAAKE,cAAYO,IACf,MAAO,CAAET,MAAO,SAClB,QACE,MAAO,IAjBE,GAqBTU,EAAa,WACjB,OAAQZ,EAAQC,WAAWW,WACzB,KAAKC,YAAUC,KACb,OAAId,EAAQC,WAAWE,UAAYC,cAAYC,MACtC,CAAEU,UAAW,kBACf,GACT,KAAKF,YAAUG,MACb,MAAO,CAAED,UAAW,YAAaE,YAxDvB,KAyDZ,KAAKJ,YAAUK,SACb,MAAO,CAAEH,UAAW,cAAeE,YA1DzB,KA6Dd,MAAO,GAZU,GAebE,EAAkB,WACtB,OAAQnB,EAAQC,WAAWD,SACzB,KAAKoB,cAAYC,OACf,MAAO,CAAEN,UAAW,cAAeE,YAnEzB,KAoEZ,KAAKG,cAAYE,OACf,MAAO,CAAEP,UAAW,YAAaE,YArEvB,KAsEZ,KAAKG,cAAYG,MACf,MAAO,CAAER,UAAW,YAAaE,YAvEvB,KAwEZ,QACE,MAAO,IATW,GAalBO,GAEDxB,EAAQC,WAAWwB,OACpBrC,IAAEsC,QAAQ1B,EAAQC,WAAWwB,MAAO,IAE7B,GAEA,CAAEV,UAAW,QAIxB,OAAO,mDAAKH,GAAcV,GAAUiB,GAAmBK,I,QC9FrDG,EAA2B,CAC/BlG,WAAY,CAAElC,MAAO,GAAIC,OAAQ,IACjCoI,OAAQ,SACRC,OAAQ,CACNC,WAAY,CAAEC,IAAK,GAAIC,KAAM,KAC7BC,WAAY,CAAEF,IAAK,GAAIC,KAAM,OAOpBE,EAAgB,SAAC5I,GAAD,MAAgC,CAC3D6I,KAJqB,iBAKrBC,QAAQ,eAAM9I,K,iBCCH+I,EAAY,SACvBC,EACAtD,EACAT,GAHuB,OAKvBxF,IAAEwJ,QACA,CACEJ,KAAM,oBAENK,SAAUF,EAAKtI,KAAI,SAACyI,EAAKC,GAAN,MAAa,CAC9BC,SAAUF,EACVxC,WAAYjB,EAAM0D,GAClBP,KAAM,eAGV,CAAE5D,Y,SHFMM,O,2BAAAA,I,qBAAAA,I,eAAAA,I,gBAAAA,M,KIxBL,IAwBM+D,EAAW,SACtB5I,EACA6I,GACI,IAAD,EACuBC,mBAASD,GADhC,mBACI7D,EADJ,KACW+D,EADX,OAEuCD,qBAFvC,mBAEIE,EAFJ,KAEmBC,EAFnB,KAaH,OARAC,qBAAU,gBACIpD,IAAR9F,IACAgJ,GAAehJ,EAAImJ,YAAYH,QACrBlD,IAAVd,GACFA,EAAMjF,MAAMC,MAEb,CAACgF,EAAOgE,EAAehJ,IAEnBoJ,uBACL,SAACC,GACCN,EAASM,GACTJ,EAAiBjE,KAEnB,CAAC+D,EAAUE,EAAkBjE,KAuCpBsE,EAAgB,SAC3BtJ,EACA2F,EACA4D,GAEA,IAAMC,EAAYZ,EAAS5I,GAErByJ,EACkB,WAAlB9D,ED/DkB,SAAC4D,GAAD,OACxBxK,IAAEwJ,QACA,CACEJ,KAAM,qBAENK,SAAUe,GAEZ,CACEhF,MAAO,iBAAO,CACZ2B,MAAO,OACPwD,QAAS,OCqD0BC,CAAWJ,QAC7C,EAGPL,qBAAU,WACRM,EAAUC,KACT,CAACA,EAAcD,KAmBPI,EAAkB,SAC7B5J,EACA4E,EACAiF,EACAC,GAEA,IAAMxB,EAAOyB,mBAAQ,WACnB,GAAK/J,GAAQ4E,EACb,OAAOyD,EDjIsB,SAC/BR,EACApG,GACI,IACIlC,EAAkBkC,EAAlBlC,MAAOC,EAAWiC,EAAXjC,OACf,OAAOwK,2BAAiB,CACtBzK,QACAC,SACAyK,UAAWpC,EAAOqC,UAClBC,QAAStC,EAAOuC,UAChBC,UAAWxC,EAAOyC,WAClBC,QAAS1C,EAAO2C,aC0HdC,CAAkB7F,EAAWzE,YAAa2J,EAASrI,YACnD,IACA,iBAAO,CACLiI,QAAS,GACTxD,MAAO,cAGV,CAAClG,EAAK4E,EAAYkF,IAEfY,EAAa9B,EAAS5I,EAAKsI,GAEjCY,qBAAU,WACR,GAAKtE,EAAL,CAEA,IAAM+F,EAAU,WACdd,EAAejF,EAAWzE,aAC1BuK,EAAWpC,IAKb,OAFA1D,EAAWpC,GAAG,SAAUmI,GAEjB,kBAAM/F,EAAW1D,IAAI,SAAUyJ,OACrC,CAAC/F,EAAY8F,EAAYb,EAAgBvB,IAE5CsC,aACE,WACEF,EAAWpC,KAEb,IACA,CAACA,EAAMwB,KCzHLe,EAAqB,CACzBhB,eHpB0B,SAAChC,GAAD,MAA2B,CACrDM,KAboB,gBAcpBC,QAAS,CAAEP,aGwCEiD,eAhCiD,SAAC5F,GAAD,MAAY,CAC1EoD,KAAMpD,EAAMC,QAAQmD,KACpBtD,MAAOW,EAAcT,GACrBqE,WAAYrE,EAAMC,QAAQoE,WAC1B5D,cAAeT,EAAMW,QAAQF,cAC7BmE,SAAU5E,EAAM4E,SAChBiB,iBAAkB7F,EAAMC,QAAQ4F,oBA0BMF,EAAzBC,EAnBiB,SAAC,GAQ1B,IAPLjB,EAOI,EAPJA,eACAC,EAMI,EANJA,SACAnE,EAKI,EALJA,cACA4D,EAII,EAJJA,WACAjB,EAGI,EAHJA,KACAtD,EAEI,EAFJA,MACA+F,EACI,EADJA,iBAEM/K,EDlDqB,WAAO,IAAD,EACX8I,qBADW,mBAC1B9I,EAD0B,KACrBgL,EADqB,KAqBjC,OAlBA9B,qBAAU,WACR,IAAMlJ,EAAMjB,IAAEiB,IAAI,OAAOiL,QAAQ,CAAC,IAAK,KAAM,GAE7ClM,IAAEmM,UAAU,qDAAsD,CAChEC,YACE,4FACDpL,MAAMC,GAKToL,YAAW,WACTpL,EAAIqL,mBACH,KAEHL,EAAOhL,KACN,IAEIA,EC6BKsL,GACN1G,EDFqB,SAC3B5E,EACA6J,EACAkB,GACI,IAAD,EAC6BjC,qBAD7B,mBACIyC,EADJ,KACcC,EADd,KAGG5G,EAAamF,mBAAQ,WACzB,GAAK/J,GAAO+K,IAAqBlG,EAAiB4G,KAAlD,CACA,IAAM7G,EAAa7F,IAAE6F,WAAW,CAC9BrF,MAAO,IACPC,OAAe,QAAP,IACRC,iBAAiB,IAMnB,OAJAmF,EAAW7E,MAAMC,GAEjB6J,EAAejF,EAAWzE,aAEnByE,KACN,CAAC5E,EAAK6J,EAAgBkB,IAazB,OAXA7B,qBAAU,WACJtE,GAAY4G,EAAY5G,KAC3B,CAACA,IAEJsE,qBAAU,YACHtE,GAAc2G,IACjBA,EAAStK,SACTuK,OAAY1F,MAEb,CAACyF,EAAU3G,IAEPA,EC9BY8G,CAAc1L,EAAK6J,EAAgBkB,GAMtD,OAJAnB,EAAgB5J,EAAK4E,EAAYiF,EAAgBC,GACjDR,EAActJ,EAAK2F,EAAe4D,GD+CR,SAC1BvJ,EACAsI,EACAtD,GAEA,IAAM+D,EAAWH,EAAS5I,GACpByJ,EAAeM,mBACnB,kBAAM1B,EAAUC,EAAMtD,EAAOe,KAC7B,CAACuC,EAAMtD,IAGTkE,qBAAU,WACRH,EAASU,KACR,CAACV,EAAUU,IC3DdkC,CAAa3L,EAAKsI,EAAMtD,GAEjB,yBAAK4G,GAAG,W,yBC3CJC,EAAc,SAACC,GAAD,MAA2B,CACpD3D,KAjB0B,eAkB1BC,QAAS,CACP2D,aAAc,CACZC,MAAO,EACPC,UAAMnG,GAERgG,eACAf,iBAAkBlG,EAAiBqH,WA0B1BC,EAAqB,SAACC,GAAD,MAAkC,CAClEhE,QAAS,CAAEpD,MAAOoH,EAAKpH,OACvBmD,KAtD2B,kB,0CCChBkE,EAAW,SAAC,GAMX,IAAD,IALXlH,QACEmH,EAIS,EAJTA,YACAvB,EAGS,EAHTA,iBACgBiB,EAEP,EAFTD,aAAgBC,MAGlB,OAAIjB,IAAqBlG,EAAiB0H,KAAa,EACjC,MAAfD,GAAgC,MAATN,EAAgBA,EAAQM,EAAc,GCAhEE,EAAoB,SAACxJ,EAAeyJ,GACxC,IAAIC,EAAc,IAAIC,YAAY3J,GAGlC,OAFA0J,EAAYE,iBAAiB,QAASH,GAE/B,kBAAMC,EAAYG,oBAAoB,QAASJ,KAGlDK,EAAc,SAAC9H,GAAD,OAAuB,SACzC+H,EACAC,GACI,IACIxF,EAAWxC,EAAXwC,OAEKc,EACT0E,IADF7H,QAAWmD,KAERd,GAeLuF,EFkB+B,SAACE,GAAD,MAA0B,CACzD7E,QAAS6E,EACT9E,KAvD2B,iBEmClB+E,CAbK1F,EAAO2F,SAAQ,SAACvO,EAAM8J,GAClC,IAAK9J,EAAK6I,MAAO,MAAO,GACxB,IAAM2F,EAAO9E,EAAKI,GASlB,OAR6BpD,OAAO+H,QAAQzO,EAAK6I,OAI9CzH,KAAI,mCAAEsN,EAAF,iBACIC,yBAAeH,EAAME,GAAa,QAE1C7H,QAAO,SAAC+H,GAAD,OAAmB,OAATA,YAMlBC,EAAe,SAACC,GAAD,8CAAc,WACjCX,EACAC,GAFiC,eAAAW,EAAA,sDAI3BvB,EAAOwB,KAAKC,MAAOH,EAAUtB,MACnCW,EAASZ,EAAmBC,IAC5BW,EAASD,EAAYV,EAAKpH,QAC1B8I,QAAQC,IAAIf,UDnDkBlH,KADJZ,ECqDV8H,KDpDV7H,QAAQmH,aACdpH,EAAMC,QAAQmH,cAAgBpH,EAAMC,QAAQ4G,aAAaC,OCoDvDe,EF5C8B,CAChC5E,KAN0B,eAO1BC,QAAS,CACP2D,aAAc,CACZC,MAAO,EACPC,UAAMnG,GAERiF,iBAAkBlG,EAAiB0H,QE4BJ,iCD7CR,IAACrH,IC6CO,OAAd,yDCEfyC,EAAwB,CAC5BW,KAAM,GACNvD,OAAQ,GACRgH,aAAc,CACZC,MAAO,GAETzC,WAAY,GACZwB,iBAAkBlG,EAAiB4G,M,iBCMtBuC,EAnD+B,SAAC,GAAD,IAC5CC,EAD4C,EAC5CA,MACAC,EAF4C,EAE5CA,SACGC,EAHyC,2CAK5C,kBAAC,IAAD,eACEF,MAAO,CAACA,GACRC,SAAU,SAACR,GAAD,OAAOQ,EAASR,EAAEO,MAAM,MAC9BE,EAHN,CAIEC,UAAW,CACTC,KAAM,CACJ9J,MAAO,iBAAO,CACZhF,MAAO,MACPC,OAAQ,UAGZ8O,MAAO,CACL/J,MAAO,iBAAO,CACZgK,WAAY,MACZC,YAAa,MACbC,aAAc,MACdC,cAAe,MACfC,YAAa,SAGjBC,QAAS,kBAAM,MACfC,WAAY,kBAAM,MAClBC,WAAY,kBAAM,MAClBC,WAAY,CACVxK,MAAO,iBAAO,CACZyK,WCzCmB,UD0CnBxP,OAAQ,UAGZyP,MAAO,CACL1K,MAAO,iBAAO,CACZ/E,OAAQ,OACRD,MAAO,OACP2P,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,YAAa,QACbC,YAAa,MACbC,YAAa,OACbC,gBAAiB,e,gBEsBZC,EAjE8B,SAAC,GAAkC,IAAhCvB,EAA+B,EAA/BA,SAAUD,EAAqB,EAArBA,MAAUE,EAAW,sCACzCuB,IAAM5G,SAAS,IAD0B,mBACtE6G,EADsE,KAC1DC,EAD0D,OAE/CF,IAAM5G,UAAS,GAFgC,mBAEtE+G,EAFsE,KAE7DC,EAF6D,KAIvEC,EAAcrO,SAASiO,GACvBK,EAAUD,GAAe,IAAMA,GAAe,IAEpD,OACE,kBAAC,IAAD,eACEE,YAAY,QACZ/B,SAAU,SAAClL,GACT4M,EAAe5M,EAAMkN,OAAejC,MAAMkC,MAAM,EAAG,KAErDC,OAAQ,WAIN,GAHAN,GAAW,GACXF,EAAc,IAEVI,EAAS9B,EAAS6B,QACjB,IAAKM,OAAOC,MAAMP,GAAc,CACnC,IAAMQ,EAAUC,gBAAMT,EAAa,GAAI,KACvC7B,EAASqC,KAGbE,QAAS,kBAAMX,GAAW,IAC1B1P,KAAMsQ,IAAKC,KACXC,OAAQZ,EACR/B,MAAO4B,EAAUF,EAAa1B,GAC1BE,EAnBN,CAoBEC,UAAW,CACTC,KAAM,CACJ9J,MAAO,iBAAO,CACZhF,MAAO,MACPC,OAAQ,OACRmP,YAAa,OACbkC,WAAY,OACZC,UAAW,MACX9B,WDhDiB,aCmDrB+B,YAAa,CACXxM,MAAO,iBAAO,CACZyM,WAAY,SACZC,SAAU,OACVzB,gBDvDiB,UCwDjBtJ,MDtDkB,aCyDtBgL,MAAO,CACL3M,MAAO,iBAAO,CACZyM,WAAY,SACZC,SAAU,OACVzB,gBD/DiB,UCgEjBtJ,MD9DkB,aCiEtBiL,eAAgB,CACd5M,MAAO,iBAAO,CACZgL,YDrEiB,kB,UEkBvB1E,GAAqB,CACzB3C,iBAGIkJ,GAAoD,CACxD,QAAS,iBACT,SAAU,mBAGN9R,GAAU+R,cAAYrR,KAAI,SAAC4H,GAAD,MAAa,CAC3CgE,GAAIhE,EACJ0J,MAAOF,GAAmBxJ,OA2FbkD,gBA1GS,SAAC5F,GAAD,MAAmB,CACzC0C,OAAQ1C,EAAM4E,SAASlC,UAyGeiD,GAAzBC,EAxF+B,SAAC,GAAD,IAAGlD,EAAH,EAAGA,OAAQM,EAAX,EAAWA,cAAX,OAC5C,kBAAC,KAAD,CACEqJ,WAAW,EACXnR,KAAMsQ,IAAKC,KACX1C,MAAO,CAAC,CAAErC,GAAIhE,IACdtI,QAASA,GACTkS,YAAY,EACZtD,SAAU,SAACuD,GAAD,OAASvJ,EAAc,CAAEN,OAAQ6J,EAAIxD,MAAM,GAAGrC,MACxDwC,UAAW,CACTsD,QAAS,CACPC,MAAO,CACLvD,UAAW,CACTwD,KAAM,CAAErN,MAAO,iBAAO,CAAEsN,OAAQ,UAItCxD,KAAM,CACJ9J,MAAO,iBAAO,CACZhF,MAAO,OACPC,OAAQ,OACRsR,UAAW,OACXD,WAAY,SACZlC,YAAa,WACbmD,QAAS,MACT9C,WFxDmB,UEyDnB+C,aAAc,SAGlBC,eAAgB,CACdzN,MAAO,iBAAO,CACZiK,YAAa,OACbQ,WF/DmB,UEgEnB9I,MF9DoB,aEiExB+L,iBAAkB,CAChB1N,MAAO,iBAAO,CACZwN,aAAc,MACdG,OAAQ,UAGZC,eAAgB,CACd5N,MAAO,iBAAO,CACZyK,WF3EmB,UE4EnBO,YF5EmB,UE6EnB2C,OAAQ,SAGZE,YAAa,CACX7N,MAAO,iBAAO,CACZ2B,MFhFoB,aEmFxBmM,kBAAmB,CACjB9N,MAAO,iBAAO,CACZiL,gBFvFmB,aE0FvB8C,oBAAqB,CACnB/N,MAAO,iBAAO,CACZwN,aAAc,SAGlBQ,SAAU,CACRhO,MAAO,iBAAO,CACZiL,gBFjGmB,UEkGnBd,cAAe,MACfH,WAAY,SAGhBiE,iBAAkB,CAChBjO,MAAO,iBAAO,CACZiL,gBFxGmB,UEyGnBd,cAAe,MACfH,WAAY,SAGhBkE,cAAe,CACblO,MAAO,iBAAO,CACZ2B,MF7GoB,UE8GpB8K,WAAY,SACZC,SAAU,gB,oBC1GPyB,GAAgD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC3D,yBAAKC,UAAWC,KAAOC,eAAgBH,IAG1BD,M,wCCMAK,GATuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASL,EAAZ,EAAYA,SAAahB,EAAzB,6CACpC,0CACEiB,UAAWI,EAAUH,KAAOI,eAAiBJ,KAAOK,QAChDvB,GAEHgB,ICACQ,GAAc,CAAErP,IAAK,GAAID,IAAK,KAgB9BgH,GAAqB,CACzBqD,SAAUhG,EACVkL,SCvBoB,kBAAM,SAACrG,EAAuBC,GAClDD,EXwC+B,CAC/B5E,KA9CwB,aA+CxBC,QAAS,CACP0D,kBAAchG,EACdiF,iBAAkBlG,EAAiBwO,cW3CrC,IAAM/T,EAAwB0N,IVQqBlD,SUNnD,OAAOwJ,MAAM,GAAD,OCZa,wBDYb,YAA2B,CACrCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM7F,KAAK8F,UAAUpU,KACpBqU,MACD,SAACC,GAAD,OAAU7G,ETyCe,SAAC6G,GAAD,8CAAoB,WAC/C7G,GAD+C,iBAAAY,EAAA,sEAG7BiG,EAAKC,OAHwB,OAGzCC,EAHyC,OAKzCC,EAAoBvH,EAAkB,GAAD,OUjElB,wBViEkB,oBACfsH,EAAIlI,KAC9B,SAAC8B,GAAD,OAAcX,EAASU,EAAaC,OAGtCX,EF9B4C,CAC5C5E,KAnC0B,eAoC1BC,QE6Bc,CACVE,KAAMwL,EAAIxL,KACVgE,YAAawH,EAAIE,QACjBjP,OAAQ,GACRkP,MAAOH,EAAIlI,GACXmI,uBAhB2C,2CAApB,sDSzCNG,CAAcN,OACjC,SAAChD,GAAD,OAAW7D,EAASlB,EAAY+E,SDYlCuD,adV0B,iBAAO,CACjChM,KATqB,iBAUrBC,QAAS,CAAER,OAAQD,EAAaC,OAAQnG,WAAYkG,EAAalG,ecqD7D2S,GAAoC,SAAC,GAOpC,IANLC,EAMI,EANJA,gBACAvQ,EAKI,EALJA,IACAD,EAII,EAJJA,IACAyQ,EAGI,EAHJA,MACAC,EAEI,EAFJA,MACArG,EACI,EADJA,SAEMyD,EAAQ,CACZ1D,MAAOoG,EAAgB5S,WAAW8S,GAClCzQ,MACAD,MACAqK,SAAU,SAACD,GAAD,OACRC,EAAS,2BACJmG,GADG,IAEN5S,WAAW,2BAAM4S,EAAgB5S,YAAvB,kBAAoC8S,EAAQtG,SAG5D,OACE,yBAAK2E,UAAWC,KAAO2B,uBACrB,yBAAK5B,UAAWC,KAAO4B,cAAeH,GACtC,kBAAC,EAAe3C,GAChB,kBAAC,EAAcA,KAKN7G,gBAlFS,SAAC5F,GAAD,MAAmB,CACzCmP,gBAAiB,CACfzM,OAAQ1C,EAAM4E,SAASlC,OACvBnG,WAAYyD,EAAM4E,SAASrI,eA+ESoJ,GAAzBC,EArEyC,SAAC,GAKlD,IAJLoD,EAII,EAJJA,SACAkF,EAGI,EAHJA,SACAiB,EAEI,EAFJA,gBACAF,EACI,EADJA,aAEA,OACE,oCACE,yBAAKvB,UAAWC,KAAO6B,QAAvB,eACE,CAAC,QAAS,UAAwC1U,KAAI,SAACsU,GAAD,OACtD,kBAAC,GAAD,eACED,gBAAiBA,EACjBnG,SAAUA,EACVoG,MAAOA,EACPC,MAAOD,EACP5O,IAAK4O,GACDnB,QAGR,yBAAKP,UAAWC,KAAO2B,uBACrB,yBAAK5B,UAAWC,KAAO4B,cAAvB,UACA,kBAAC,GAAD,OAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQzB,SAAO,EAAC2B,QAASvB,GAAzB,YAGA,kBAAC,GAAD,CAAQuB,QAASR,GAAjB,c,8BGxDFxM,GAA6B,CACjChC,mBAAeG,GC8BX+E,GAAqB,CACzB+J,cDvByB,SAAChP,GAAD,MAA+B,CACxDuC,KEhB0B,eFiB1BC,QAAS,CAAExC,eCsBXiP,YHfyB,yDAAM,WAC/B9H,EACAC,GAF+B,yBAAAW,EAAA,6DAIvBsG,EAAUjH,IAAW7H,QAArB8O,MAJuB,SAKZX,MAAM,GAAD,OC7BC,wBD6BD,oBAA2BW,IALpB,UAOX,OAFdL,EALyB,QAOtBkB,OAPsB,gBAQ7B/H,EAASlB,EAAY,aAAD,OAAcoI,EAAd,sBARS,8BAUvBc,GACJ,UAAAnB,EAAKJ,eAAL,mBAAcwB,IAAI,8BAAlB,eAA0CC,MAAM,aAAa,KAC7D,wBAZ2B,UAaVrB,EAAKsB,OAbK,QAavBA,EAbuB,OAe7BC,IAASD,EAAMH,GAfc,4CAAN,yDGgBzBK,SdKsB,iBAAO,CAC7BjN,KApCuB,ecwGV2C,gBArFS,SAAC5F,GAAD,MAAmB,CACzCmH,SAAUA,EAASnH,GACnBS,cAAeT,EAAMW,QAAQF,cAC7B0P,eAAgBpQ,EAAuBC,GACvC6G,aAAc7G,EAAMC,QAAQ4G,aAAaE,KACzClB,iBAAkB7F,EAAMC,QAAQ4F,oBAgFMF,GAAzBC,EAvEoC,SAAC,GAQ7C,IAPLuB,EAOI,EAPJA,SACAwI,EAMI,EANJA,YACAQ,EAKI,EALJA,eACAtK,EAII,EAJJA,iBACA6J,EAGI,EAHJA,cACAQ,EAEI,EAFJA,SACAzP,EACI,EADJA,cACI,EACgC+J,IAAM5G,UAAS,GAD/C,mBACGwM,EADH,KACeC,EADf,KAEJ,OACE,oCACE,yBAAK3C,UAAWC,KAAO6B,QACpBrI,EAAW,EAAI,kBAAoB,qBAEtC,yBAAKuG,UAAWC,KAAO2C,iBACnBlQ,OAAO+H,QAAQgI,GAA+CrV,KAC9D,mCAAEgF,EAAF,KAASyQ,EAAT,YACE,4BACEd,QAAS,kBAAMC,EAAc5P,IAC7B4N,UACEjN,IAAkBX,EAAQ6N,KAAO6C,gBAAkB7C,KAAOK,OAE5DyC,UAAWF,GAEVzQ,OAKT,kBAAC,KAAD,CACEiJ,MAAO5B,EACPuJ,aAAc,EACdxH,UAAW,CACTyH,YAAa,CACXtR,MAAO,WACL,MAAO,CACLuR,SAAU,WACVC,gBAAiB,aAIvBC,IAAK,CACHzR,MAAO,kBAAiB,CACtB/E,OADK,EAAGyW,OACOC,OAAOC,SACtBtF,WAAY,OACZlC,YAAa,OACba,gBT1Fe,gBS+FvB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEwD,SAAUsC,EACVX,QAAS,WACPY,GAAc,GACdV,KAEFc,SAAUL,GAAcvK,IAAqBlG,EAAiB0H,MANhE,YAUA,kBAAC,GAAD,CAAQyG,QAASsC,EAAYX,QAASS,GAAtC,cEjFOtK,gBAlBS,SAAC5F,GAAD,MAAmB,CACzCkR,cACElR,EAAMC,QAAQ4F,mBAAqBlG,EAAiBwO,YACpDnO,EAAMC,QAAQ4F,mBAAqBlG,EAAiB0H,QAezCzB,EAR0B,SAAC,GAAD,IAAGsL,EAAH,EAAGA,cAAH,OACvC,oCACE,yBAAKxD,UAAWC,IAAOwD,WACpBD,EAAgB,kBAAC,GAAD,MAAgB,kBAACE,GAAD,W,sCCfjCC,GAAS,IAAIC,KAENC,GAAoB,SAAC,GAAD,IAAG9D,EAAH,EAAGA,SAAH,OAC/B,kBAAC,KAAD,CAAmB1E,MAAOsI,IACxB,kBAAC,KAAD,CAAcG,MAAOC,MAAahE,K,sFC+DvBiE,GAjEqB,WAiDlC,OAhDA1N,qBAAU,WACR,IAAM2N,EACJ,4BAAQjE,UAAWC,KAAO6B,QAA1B,SACS,IACP,yBAAK9B,UAAWC,KAAOY,MAAvB,0DAKEqD,EACJ,kBAAC,KAAD,CAAOhG,UAAU,OAAO5B,QAAQ,OAAOE,eAAe,UACpD,uBACE2H,KAAK,uBACL7G,OAAO,SACP3L,MAAO,CAAEyS,eAAgB,SAEzB,kBAAC,KAAD,CACErC,QAAS,kBAAMsC,KAAQC,MAAMC,IAC7B/W,KAAMsQ,KAAK0G,QACXhJ,UAAW,CACTiJ,WAAY,CACV9S,MAAO,cAAG0R,OAAH,MAAiB,CACtBlE,aAAc,cANtB,eAiBAoF,EAAUF,KAAQK,SACtB,oCACGT,EACAC,GAEH,CACES,QAAS,kBAAMzJ,QAAQC,IAAI,kBAC3BK,UAAW,CACToJ,eAAgB,CACdjT,MAAO,CAAEhF,MAAO,cAKvB,IAED,kBAAC,KAAD,CACEkY,UAAWC,KAAUhT,OACrB0J,UAAW,CACTuJ,UAAW,CACTpT,MAAO,kBAAiB,CACtBiL,gBADK,EAAGyG,OACgB2B,OAAOC,wBAC/BC,UAAW,qBACX/F,aAAc,aCxDbgG,GAAoB,kBAC/B,kBAAC,GAAD,KACE,yBAAKnF,UAAWC,KAAOmF,MACrB,yBAAKpF,UAAWC,KAAOoF,eACrB,kBAAC,EAAD,MACA,kBAAC,GAAD,OAEF,yBAAKrF,UAAWC,KAAOqF,aACvB,kBAAC,GAAD,S,oBCVOC,GAAkB,kBAC7B,kBAAC,GAAD,KACE,yBAAKvF,UAAWC,KAAOmF,MACrB,yBAAKpF,UAAWC,KAAOY,MACrB,yBAAKb,UAAWC,KAAOuF,OACrB,wBAAIxF,UAAWC,KAAOwF,gBAAtB,2CAGA,uBAAGzF,UAAWC,KAAOyF,kBAArB,gEAGA,yBAAK1F,UAAWC,KAAOC,eACrB,kBAAC,IAAD,CACEyF,GAAG,IACHhU,MAAO,CAAEyS,eAAgB,OAAQ9Q,MAAO,0BAExC,kBAAC,GAAD,CAAQ8M,SAAO,GAAf,gBAEF,uBACE+D,KAAK,2CACLxS,MAAO,CAAEyS,eAAgB,OAAQ9Q,MAAO,0BAExC,kBAAC,GAAD,kBAIN,2BAAOsS,UAAQ,GACb,4BAAQC,IAAI,kBAAkBtQ,KAAK,mB,wCCb9BuQ,GAbyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,MAC/C,QAAPD,EACE,iIAGE,gCAAMC,IAGR,gGAC2D,4BAAKA,K,oBCN9DC,GAGD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACHrJ,IAAMsJ,eAAeF,IAAyB,kBAATA,EACnC,oCAAGA,GAEH,kBAAC,GAAD,CAAqBG,YAAaH,EAAqBC,MAAOA,EAAQ,KAGpEG,GAAsD,SAAC,GAItD,IAAD,IAHJD,YAAe3E,EAGX,EAHWA,MAAO6E,EAGlB,EAHkBA,MACtBC,EAEI,EAFJA,UAEI,IADJL,aACI,MADI,EACJ,EACEM,EAAqB,IAAVN,EAAc,KAAO,KAChCO,EAAuB,IAAVP,EAAc,KAAO,KACxC,OACE,qCACIK,GAAa,kBAACE,EAAD,CAAY1G,UAAWC,KAAO6B,QAASJ,GACtD,kBAAC+E,EAAD,KACGF,EAAMnZ,KAAI,SAAC8Y,EAAMpQ,GAAP,OACT,wBAAIhD,IAAKgD,EAAGkK,UAAWC,KAAO0G,iBAC5B,kBAAC,GAAD,CAAMT,KAAMA,EAAMC,MAAOA,WAQtBG,MCpCFM,GAAQ,CACnBC,IAAK,gEACLC,QAAQ,0FAGJC,GAAe,SAAChB,EAAuBC,GAAxB,MAAuD,CAC1EtE,MAAO,iBACP6E,MAAO,CACL,CACE7E,MAAO,mBACP6E,MAAO,CACL,sDACA,kBAAC,GAAoB,CAAER,KAAIC,WAG/B,CACEtE,MAAO,gBACP6E,MAAO,CAAC,oFAAD,6IAWE,mBACbR,EADa,EACbA,GACAS,EAFa,EAEbA,UAFa,OAOb,kBAACQ,GAAD,CACER,UAAWA,EACXH,YAAaU,GAAahB,EAAIa,GAAMb,OCrC3Ba,GAAQ,CACnBC,IACE,8EACFC,QAAQ,oEAGJG,GAAe,SAAClB,EAAuBC,GAAxB,MAAuD,CAC1EtE,MAAO,kBACP6E,MAAO,CACL,CACE7E,MAAO,mBACP6E,MAAO,CACL,8DACA,kBAAC,GAAoB,CAAER,KAAIC,WAG/B,CACEtE,MAAO,gBACP6E,MAAO,CAAC,mCAAD,uIASE,mBACbR,EADa,EACbA,GACAS,EAFa,EAEbA,UAFa,OAOb,kBAACQ,GAAD,CACER,UAAWA,EACXH,YAAaY,GAAalB,EAAIa,GAAMb,OC/BlCmB,GAAW,CACfC,kBAAmB,UACnB9I,SAAU,OACVD,WAAY,UAGRgJ,GAAmB,kBACvB,kBAAC,KAAD,CACErS,aAAc,CAAEsS,UAAW,KAC3B7L,UAAW,CACT8L,OAAQ,CACN3V,MAAO,iBAAO,CACZyK,WAAY,QACZzP,MAAO,QACPsR,WAAY,OACZlC,YAAa,UAGjBwL,WAAY,CACV5V,MAAO,iBAAO,CACZ2B,MAAO,QACP+K,SAAU,OACV1C,WAAY,OACZG,cAAe,YAKrB,kBAAC,KAAD,CACE4F,MAAO,QACPlG,UAAW,CACTgM,IAAK,CAAE7V,MAAOuV,MAGhB,yBAAKlH,UAAWC,KAAOwH,mBACrB,yBAAKzH,UAAWC,KAAOyH,kBACrB,kBAACC,GAAD,CAAqB5B,GAAG,SAE1B,yBAAK/F,UAAWC,KAAO2H,kBACrB,kBAACC,GAAD,CAAqB9B,GAAG,WAI9B,kBAAC,KAAD,CACErE,MAAO,UACPlG,UAAW,CACTgM,IAAK,CAAE7V,MAAOuV,MAGhB,yBAAKlH,UAAWC,KAAOwH,mBACrB,yBAAKzH,UAAWC,KAAOyH,kBACrB,kBAACC,GAAD,CAAqB5B,GAAG,aAE1B,yBAAK/F,UAAWC,KAAO2H,kBACrB,kBAACC,GAAD,CAAqB9B,GAAG,iBAO5B+B,GAAgB,kBACpB,kBAAC,IAAD,KACE,yBAAK9H,UAAWC,KAAOuF,OACrB,wBAAIxF,UAAWC,KAAOwF,gBAAtB,OACA,yBAAKzF,UAAWC,KAAOY,MACrB,wBAAIb,UAAWC,KAAO8H,eAAgB/O,GAAG,iBAAzC,uBACsB,0DADtB,SAEE,uBAAGgH,UAAWC,KAAO+H,YAArB,8TAKuD,MAGzD,wBAAIhI,UAAWC,KAAO8H,gBAAtB,8BACA,uBAAG/H,UAAWC,KAAO+H,YAArB,8BAC8B,IAC5B,uBAAG7D,KAAK,mDAAR,wDASG8D,GAAiB,kBAC5B,kBAAC,GAAD,KACE,yBAAKjI,UAAWC,KAAOmF,MACrB,yBAAKpF,UAAWC,KAAOY,MACrB,yBAAKb,UAAWC,KAAOuF,OACrB,wBAAIxF,UAAWC,KAAOwF,gBAAtB,iCAGA,kBAAC,GAAD,OAEF,kBAAC,GAAD,UChGYyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+BCNSC,GANYC,2BAAuB,CAChDtR,S/ByBsB,WAAsD,IAArD5E,EAAoD,uDAA5CyC,EAA4C,yCAA5BQ,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QACrD,OAAQD,GACN,IApBmB,iBAqBnB,IApBkB,gBAqBhB,OAAO,2BAAKjD,GAAUkD,GACxB,QACE,OAAOlD,I+B9BXW,QdYqB,WAA2C,IAA1CX,EAAyC,uDAAjCyC,GAAc0T,EAAmB,uCAC/D,OAAQA,EAAOlT,MACb,IblBsB,aamBpB,OAAO,2BAAKjD,GAAZ,IAAmBS,mBAAeG,IACpC,IExBwB,eFyBtB,MAAO,CAAEH,cAAe0V,EAAOjT,QAAQxC,WACzC,IbrByB,gBauBvB,QAA4BE,IAAxBZ,EAAMS,cACR,OAAO,2BACFT,GADL,IAEES,cAAeL,OAAOgW,KAAKD,EAAOjT,QAAQpD,OAAO,KAGvD,QACE,OAAOE,Ic1BXC,QxBCiB,WAGJ,IAFbD,EAEY,uDAFJyC,EAEI,yCADVQ,EACU,EADVA,KAAMC,EACI,EADJA,QAER,OAAQD,GACN,IHVyB,gBGWvB,OAAO,2BACFjD,GADL,IAEEH,OAAO,2BAAMG,EAAMH,QAAWqD,EAAQpD,OACtC+G,aAAc,CAAEC,MAAO9G,EAAM6G,aAAaC,MAAQ,KAEtD,IHZyB,gBGavB,OAAO,2BACF9G,GADL,IAEEqE,WAAYnB,IAEhB,IHtBsB,aGuBpB,OAAO,uCACFT,GACAS,GAFL,IAGE2C,iBAAkBlG,EAAiBwO,aAEvC,IHzBwB,eG2BtB,OADInO,EAAM6O,mBAAmB7O,EAAM6O,oBAC5B,uCACF7O,GACAkD,GAFL,IAGE2C,iBAAkBlG,EAAiB0H,KACnCwH,uBAAmBjO,IAEvB,IH9BqB,YGiCnB,OADIZ,EAAM6O,mBAAmB7O,EAAM6O,oBAC5BpM,EACT,QACE,OAAO,2BAAKzC,GAAUkD,OyB/B5BmT,IAASC,OACP,kBAAC,IAAD,CAAUC,MCTVC,uBAAYP,GAAaQ,+BAAoBC,2BAAgBC,SDU3D,kBAAC,IAAD,KACE,yBAAKjJ,UAAWC,IAAOiJ,SACrB,yBAAKlJ,UAAWC,IAAOkJ,kBACrB,kBAAC,IAAD,CAASxD,GAAG,IAAI3F,UAAWC,IAAO6B,QAChC,yBAAK9B,UAAWC,IAAOmJ,KAAMvD,IAAI,YAAYwD,IAAI,SACjD,+DAGJ,yBAAKrJ,UAAWC,IAAOqJ,QACvB,yBAAKtJ,UAAWC,IAAOsJ,qBACrB,yBAAKvJ,UAAWC,IAAOuJ,kBACrB,kBAAC,IAAD,CACE7D,GAAG,SACH3F,UAAWC,IAAOwJ,UAClBC,gBAAiBzJ,IAAO0J,oBAH1B,UAQF,yBAAK3J,UAAWC,IAAOuJ,kBACrB,kBAAC,IAAD,CACE7D,GAAG,QACH3F,UAAWC,IAAOwJ,UAClBC,gBAAiBzJ,IAAO0J,oBAH1B,WAUN,kBAAC,IAAD,CAAOC,OAAK,EAAC5D,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,SAIN6D,SAASC,eAAe,SFgFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlJ,MAAK,SAACmJ,GAClCA,EAAaC,iB,mBI1InBre,EAAOC,QAAU,CAAC,QAAU,qBAAqB,iBAAmB,8BAA8B,OAAS,oBAAoB,KAAO,kBAAkB,oBAAsB,iCAAiC,iBAAmB,8BAA8B,UAAY,uBAAuB,mBAAqB,kC,mBCAxTD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,oBAAsB,oCAAoC,UAAY,0BAA0B,mBAAqB,mCAAmC,WAAa,2BAA2B,MAAQ,sBAAsB,eAAiB,+BAA+B,iBAAmB,iCAAiC,cAAgB,8BAA8B,OAAS,uBAAuB,eAAiB,iC,mBCArfD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,sBAAwB,sCAAsC,aAAe,+B,mBCA/HD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,uBAAuB,gBAAkB,gCAAgC,YAAc,4BAA4B,OAAS,uBAAuB,gBAAkB,gCAAgC,aAAe,+B,mBCArRD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,oBAAsB,oCAAoC,UAAY,0BAA0B,mBAAqB,mCAAmC,WAAa,2BAA2B,cAAgB,8BAA8B,KAAO,uB,8PCDzU,gBASa,cAAiC,CAAC,QAAS,UAgBxD,SAAY,GACR,EAAF,uBACE,EAAF,2BACA,uBACA,uBACA,qBALF,CAAY,0BAAS,KA6CrB,SAAY,GACR,EAAF,mBACE,EAAF,qBACE,EAAF,qBACE,EAAF,qBACE,EAAF,eACE,EAAF,mBACE,EAAF,mBAPF,CAAY,8BAAW,KAUvB,SAAY,GACV,iBACA,qBACA,uBACE,EAAF,qBACE,EAAF,mBACA,iCACA,qBACA,yBARF,CAAY,8BAAW,KAWvB,SAAY,GACV,mBACE,EAAF,mBACE,EAAF,yBAHF,CAAY,0BAAS,KAQrB,SAAY,GACV,eACA,eACA,eACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,gBACA,sBAhCF,CAAY,oBAAM,KAqClB,IAAM,EAAc,EAAE,MAAM,CAC1B,QAAS,KACT,SAAU,OAGN,EAAc,EAAE,KAAK,CAAE,MAAO,EAAE,OAAQ,OAAQ,EAAE,SAE3C,gBAAgB,EAAE,KAAK,CAClC,WAAY,EAAE,KAAK,CAAE,IAAK,EAAE,OAAQ,IAAK,EAAE,SAC3C,WAAY,EAAE,KAAK,CAAE,IAAK,EAAE,OAAQ,IAAK,EAAE,WAGhC,cAAc,EAAE,KAAK,CAChC,WAAY,EACZ,OAAQ,EACR,OAAQ,mB,mBCtJVD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAiB,iC,mBCAnED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAkB,kC,mBCApED,EAAOC,QAAU,CAAC,UAAY,4B,8ICD9B,UACA,UACA,UACA,UACA,U,mBCHAD,EAAOC,QAAU,CAAC,cAAgB,iC","file":"static/js/main.a1d05e4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_bar\":\"styles_top_bar__2cvZD\",\"menu_item_container\":\"styles_menu_item_container__3Pfan\",\"menu_item\":\"styles_menu_item__aU3TF\",\"menu_item_selected\":\"styles_menu_item_selected__3c-dc\",\"bottom_bar\":\"styles_bottom_bar__2LhUe\",\"intro\":\"styles_intro__1YFO9\",\"landing_header\":\"styles_landing_header__1vTWP\",\"contentsContainer\":\"styles_contentsContainer__3KA02\",\"civ5Instructions\":\"styles_civ5Instructions__Xbjgx\",\"civ6Instructions\":\"styles_civ6Instructions__3lJIR\",\"body\":\"styles_body__193Dj\",\"questionHeader\":\"styles_questionHeader__gZ1Sk\",\"answerText\":\"styles_answerText__2LYu2\"};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * @param params.lat_start: latitude at the northern end of the bounding boxs\n */\nfunction createRawHexGrid({ width, height, lon_start, lon_end, lat_start, lat_end, }) {\n    var x_unit = calcUnit(lon_start, lon_end, width);\n    const y_unit = calcUnit(lat_end, lat_start, height) / 0.75;\n    var topOffset = exports.offsets[1][1] * y_unit;\n    const latStart = lat_start - topOffset;\n    var polys = [];\n    // for each row, starting at the top (highest latitude)\n    for (let row = 0; row < height; row++) {\n        // Offset to the right if even row\n        let lon_offset = row % 2 === 0 ? 0.5 * x_unit : 0;\n        let start = [\n            lon_offset + lon_start,\n            latStart - y_unit * 0.75 * row,\n        ];\n        // for each col\n        for (let col = 0; col < width; col++) {\n            const hex = createHexagon(start, x_unit, y_unit);\n            polys.push(hex);\n            start = [start[0] + x_unit, start[1]];\n        }\n    }\n    return polys;\n}\nexports.createRawHexGrid = createRawHexGrid;\nfunction calcUnit(lon_start, lon_end, width) {\n    // lock aspect ratio to width\n    var unit = (lon_end - lon_start) / width;\n    // Add a buffer of .5 units\n    unit = (unit * width) / (width + 0.5);\n    return unit;\n}\nexports.calcUnit = calcUnit;\nfunction addOffsets(offsets, start, x_unit, y_unit) {\n    const [sa, sb] = start;\n    return offsets.map((offset) => {\n        const [a, b] = offset;\n        return [sa + a * x_unit, sb + b * y_unit];\n    });\n}\nexports.addOffsets = addOffsets;\nexports.offsets = [\n    // lng, lat\n    [0, 0],\n    [0.5, 0.25],\n    [1, 0],\n    [1, -0.5],\n    [0.5, -0.75],\n    [0, -0.5],\n    [0, 0],\n];\nexports.mapRiverToLine = (poly, river) => {\n    const index = {\n        northWest: 0,\n        northEast: 1,\n        east: 2,\n        southEast: 3,\n        southWest: 4,\n        west: 5,\n    }[river];\n    const coordinates = poly.coordinates[0].slice(index, index + 2);\n    return {\n        type: \"LineString\",\n        coordinates,\n    };\n};\nfunction createHexagon(start, x_unit, y_unit) {\n    return {\n        type: \"Polygon\",\n        coordinates: [addOffsets(exports.offsets, start, x_unit, y_unit)],\n    };\n}\nexports.createHexagon = createHexagon;\n//# sourceMappingURL=createRawHexGrid.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rad = (degrees) => (Math.PI * degrees) / 180;\nconst deg = (radians) => (180 * radians) / Math.PI;\nconst calcWithRadians = (degrees, calc) => {\n    const radians = rad(degrees);\n    return deg(calc(radians));\n};\nexports.mercatorProject = (y) => calcWithRadians(y, (lat) => 2 * Math.atan(Math.exp(lat)) - 0.5 * Math.PI);\nexports.inverseMercatorProject = (y) => {\n    calcWithRadians(y, (lat) => Math.log(Math.tan(lat) + 1 / Math.cos(lat)));\n};\n//# sourceMappingURL=mercatorProjection.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nconst types_2 = require(\"./types\");\nclass TileUtils {\n}\nexports.TileUtils = TileUtils;\nTileUtils.isWater = (tile) => tile.terrain === types_2.TerrainType.coast || tile.terrain === types_2.TerrainType.ocean;\nTileUtils.isHilly = (tile) => tile.elevation !== undefined && tile.elevation !== types_2.Elevation.flat;\nTileUtils.isImpassible = (tile) => tile.elevation !== types_2.Elevation.mountain && tile.feature !== types_1.FeatureType.ice;\nTileUtils.isSettlable = (tile) => !TileUtils.isWater(tile) &&\n    !TileUtils.isImpassible(tile) &&\n    tile.feature !== types_1.FeatureType.marsh &&\n    tile.feature !== types_1.FeatureType.oasis;\n//# sourceMappingURL=Tile.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lodash_1 = require(\"lodash\");\nclass TilesArray {\n    constructor(inputArray, width) {\n        this.to2D = () => {\n            const output = [];\n            for (const row of lodash_1.range(0, this.height))\n                output.push(this.fields.slice(row * this.width, (row + 1) * this.width));\n            return output;\n        };\n        this.clone = () => new TilesArray(this.fields, this.width);\n        this.cloneWith = (value) => new TilesArray(new Array(this.fields.length).fill(value), this.width);\n        this.left = (row, col) => {\n            const nextRow = row;\n            const nextCol = col - 1;\n            return [nextRow, nextCol];\n        };\n        this.right = (row, col) => {\n            const nextRow = row;\n            const nextCol = col + 1;\n            return [nextRow, nextCol];\n        };\n        this.topLeft = (row, col) => {\n            const nextRow = row - 1;\n            const nextCol = row % 2 === 0 ? col : col - 1;\n            return [nextRow, nextCol];\n        };\n        this.topRight = (row, col) => {\n            const nextRow = row - 1;\n            const nextCol = row % 2 === 0 ? col + 1 : col;\n            return [nextRow, nextCol];\n        };\n        this.bottomLeft = (row, col) => {\n            const nextRow = row + 1;\n            const nextCol = row % 2 === 0 ? col : col - 1;\n            return [nextRow, nextCol];\n        };\n        this.bottomRight = (row, col) => {\n            const nextRow = row + 1;\n            const nextCol = row % 2 === 0 ? col + 1 : col;\n            return [nextRow, nextCol];\n        };\n        this.leftValue = (row, col) => this.getWithBoundsCheck(...this.left(row, col));\n        this.rightValue = (row, col) => this.getWithBoundsCheck(...this.right(row, col));\n        this.topLeftValue = (row, col) => this.getWithBoundsCheck(...this.topLeft(row, col));\n        this.topRightValue = (row, col) => this.getWithBoundsCheck(...this.topRight(row, col));\n        this.bottomLeftValue = (row, col) => this.getWithBoundsCheck(...this.bottomLeft(row, col));\n        this.bottomRightValue = (row, col) => this.getWithBoundsCheck(...this.bottomRight(row, col));\n        this.fields = inputArray;\n        this.width = width;\n    }\n    map(func) {\n        const result = this.fields.map(func);\n        return new TilesArray(result, this.width);\n    }\n    getIndex(row, col) {\n        return row * this.width + col;\n    }\n    get(row, col) {\n        return this.fields[this.getIndex(row, col)];\n    }\n    getWithBoundsCheck(row, col) {\n        if (this.inBounds(row, col))\n            return this.get(row, col);\n    }\n    set(row, col, value) {\n        this.fields[row * this.width + col] = value;\n    }\n    get height() {\n        return this.fields.length / this.width;\n    }\n    inBounds(row, col) {\n        return row >= 0 && col >= 0 && col < this.width && row < this.height;\n    }\n    *neighborsSquare(row, col) {\n        const djs = [-1, 1, 1, -1];\n        const dis = [0, -1, 1, 1];\n        let i = row;\n        let j = col;\n        for (const [di, dj] of lodash_1.zip(dis, djs)) {\n            const pair = [(i += di), (j += dj)];\n            if (this.inBounds(...pair))\n                yield pair;\n        }\n    }\n    *neighbors(row, col) {\n        const pairs = [\n            this.left(row, col),\n            this.topLeft(row, col),\n            this.topRight(row, col),\n            this.right(row, col),\n            this.bottomRight(row, col),\n            this.bottomLeft(row, col),\n        ];\n        for (const pair of pairs) {\n            if (this.inBounds(...pair))\n                yield pair;\n        }\n    }\n    *pairs(start = [0, 0], end = [this.height, this.width]) {\n        start = start.map((val) => Math.max(0, val));\n        end = end.map((val) => Math.min(val));\n        for (let i = start[0]; i < end[0]; i++) {\n            for (let j = start[1]; j < end[1]; j++) {\n                yield [i, j];\n            }\n        }\n    }\n    *row(row) {\n        for (let j = 0; j < this.width; j++) {\n            yield this.get(row, j);\n        }\n    }\n    *rows() {\n        for (let i = 0; i < this.height; i++) {\n            yield this.row(i);\n        }\n    }\n}\nexports.TilesArray = TilesArray;\nTilesArray.fromDimensions = (width, height, defaultValue) => new TilesArray(Array(width * height).fill(defaultValue), width);\nTilesArray.from2D = (inputArray) => new TilesArray(inputArray.reduce((value, accum) => [...accum, ...value], []), inputArray.length > 0 ? inputArray[0].length : 0);\n//# sourceMappingURL=TilesArray.js.map","import L from \"leaflet\";\n\nL.AreaSelect = L.Class.extend({\n  includes: L.Mixin.Events,\n\n  options: {\n    width: 200,\n    height: 300,\n    keepAspectRatio: false,\n  },\n\n  initialize: function (options) {\n    L.Util.setOptions(this, options);\n\n    this._width = this.options.width;\n    this._height = this.options.height;\n  },\n\n  addTo: function (map) {\n    this.map = map;\n    this._createElements();\n    this._render();\n    return this;\n  },\n\n  getBounds: function () {\n    var size = this.map.getSize();\n    var topRight = new L.Point();\n    var bottomLeft = new L.Point();\n\n    bottomLeft.x = Math.round((size.x - this._width) / 2);\n    topRight.y = Math.round((size.y - this._height) / 2);\n    topRight.x = size.x - bottomLeft.x;\n    bottomLeft.y = size.y - topRight.y;\n\n    var sw = this.map.containerPointToLatLng(bottomLeft);\n    var ne = this.map.containerPointToLatLng(topRight);\n\n    return new L.LatLngBounds(sw, ne);\n  },\n\n  remove: function () {\n    this.map.off(\"moveend\", this._onMapChange);\n    this.map.off(\"zoomend\", this._onMapChange);\n    this.map.off(\"resize\", this._onMapResize);\n\n    this._container.parentNode.removeChild(this._container);\n  },\n\n  setDimensions: function (dimensions) {\n    if (!dimensions) return;\n\n    this._height = parseInt(dimensions.height) || this._height;\n    this._width = parseInt(dimensions.width) || this._width;\n    this._render();\n    this.fire(\"change\");\n  },\n\n  _createElements: function () {\n    if (!!this._container) return;\n\n    this._container = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-container\",\n      this.map._controlContainer\n    );\n    this._topShade = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-shade leaflet-control\",\n      this._container\n    );\n    this._bottomShade = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-shade leaflet-control\",\n      this._container\n    );\n    this._leftShade = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-shade leaflet-control\",\n      this._container\n    );\n    this._rightShade = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-shade leaflet-control\",\n      this._container\n    );\n\n    this._nwHandle = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-handle leaflet-control\",\n      this._container\n    );\n    this._swHandle = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-handle leaflet-control\",\n      this._container\n    );\n    this._neHandle = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-handle leaflet-control\",\n      this._container\n    );\n    this._seHandle = L.DomUtil.create(\n      \"div\",\n      \"leaflet-areaselect-handle leaflet-control\",\n      this._container\n    );\n\n    this._setUpHandlerEvents(this._nwHandle);\n    this._setUpHandlerEvents(this._neHandle, -1, 1);\n    this._setUpHandlerEvents(this._swHandle, 1, -1);\n    this._setUpHandlerEvents(this._seHandle, -1, -1);\n\n    this.map.on(\"moveend\", this._onMapChange, this);\n    this.map.on(\"zoomend\", this._onMapChange, this);\n    this.map.on(\"resize\", this._onMapResize, this);\n\n    this.fire(\"change\");\n  },\n\n  _setUpHandlerEvents: function (handle, xMod, yMod) {\n    xMod = xMod || 1;\n    yMod = yMod || 1;\n\n    var self = this;\n    function onMouseDown(event) {\n      event.stopPropagation();\n      self.map.dragging.disable();\n      L.DomEvent.removeListener(this, \"mousedown\", onMouseDown);\n      var curX = event.pageX;\n      var curY = event.pageY;\n      var ratio = self._width / self._height;\n      var size = self.map.getSize();\n\n      function onMouseMove(event) {\n        if (self.options.keepAspectRatio) {\n          var maxHeight =\n            (self._height >= self._width ? size.y : size.y * (1 / ratio)) - 30;\n          self._height += (curY - event.originalEvent.pageY) * 2 * yMod;\n          self._height = Math.max(30, self._height);\n          self._height = Math.min(maxHeight, self._height);\n          self._width = self._height * ratio;\n        } else {\n          self._width += (curX - event.originalEvent.pageX) * 2 * xMod;\n          self._height += (curY - event.originalEvent.pageY) * 2 * yMod;\n          self._width = Math.max(30, self._width);\n          self._height = Math.max(30, self._height);\n          self._width = Math.min(size.x - 30, self._width);\n          self._height = Math.min(size.y - 30, self._height);\n        }\n\n        curX = event.originalEvent.pageX;\n        curY = event.originalEvent.pageY;\n        self._render();\n      }\n      function onMouseUp(event) {\n        self.map.dragging.enable();\n        L.DomEvent.removeListener(self.map, \"mouseup\", onMouseUp);\n        L.DomEvent.removeListener(self.map, \"mousemove\", onMouseMove);\n        L.DomEvent.addListener(handle, \"mousedown\", onMouseDown);\n        self.fire(\"change\");\n      }\n\n      L.DomEvent.addListener(self.map, \"mousemove\", onMouseMove);\n      L.DomEvent.addListener(self.map, \"mouseup\", onMouseUp);\n    }\n    L.DomEvent.addListener(handle, \"mousedown\", onMouseDown);\n  },\n\n  _onMapResize: function () {\n    this._render();\n  },\n\n  _onMapChange: function () {\n    this.fire(\"change\");\n  },\n\n  _render: function () {\n    var size = this.map.getSize();\n    var handleOffset = Math.round(this._nwHandle.offsetWidth / 2);\n\n    var topBottomHeight = Math.round((size.y - this._height) / 2);\n    var leftRightWidth = Math.round((size.x - this._width) / 2);\n\n    function setDimensions(element, dimension) {\n      element.style.width = dimension.width + \"px\";\n      element.style.height = dimension.height + \"px\";\n      element.style.top = dimension.top + \"px\";\n      element.style.left = dimension.left + \"px\";\n      element.style.bottom = dimension.bottom + \"px\";\n      element.style.right = dimension.right + \"px\";\n    }\n\n    setDimensions(this._topShade, {\n      width: size.x,\n      height: topBottomHeight,\n      top: 0,\n      left: 0,\n    });\n    setDimensions(this._bottomShade, {\n      width: size.x,\n      height: topBottomHeight,\n      bottom: 0,\n      left: 0,\n    });\n    setDimensions(this._leftShade, {\n      width: leftRightWidth,\n      height: size.y - topBottomHeight * 2,\n      top: topBottomHeight,\n      left: 0,\n    });\n    setDimensions(this._rightShade, {\n      width: leftRightWidth,\n      height: size.y - topBottomHeight * 2,\n      top: topBottomHeight,\n      right: 0,\n    });\n\n    setDimensions(this._nwHandle, {\n      left: leftRightWidth - handleOffset,\n      top: topBottomHeight - 7,\n    });\n    setDimensions(this._neHandle, {\n      right: leftRightWidth - handleOffset,\n      top: topBottomHeight - 7,\n    });\n    setDimensions(this._swHandle, {\n      left: leftRightWidth - handleOffset,\n      bottom: topBottomHeight - 7,\n    });\n    setDimensions(this._seHandle, {\n      right: leftRightWidth - handleOffset,\n      bottom: topBottomHeight - 7,\n    });\n  },\n});\n\nL.areaSelect = function (options) {\n  return new L.AreaSelect(options);\n};\n","import { Polygon, Geometry, Feature, LineString } from \"geojson\";\nimport {\n  LayersType,\n  MapOptions,\n  Tile,\n  MapLayerValue,\n} from \"@tile-generator/common\";\n\nexport type State = {\n  settings: MapOptions;\n  mapData: MapData;\n  leaflet: LeafletState;\n};\n\nexport type MapData = {\n  grid: Polygon[];\n  layers: LayersType;\n  loadingLayer: {\n    index: number;\n    name?: MapLayerValue;\n  };\n  riverLines: LineString[];\n  mapId?: string;\n  removeSSEListener?: Function;\n  submissionStatus: SubmissionStatus;\n  errorMessage?: string;\n  totalLayers?: number;\n};\n\nexport type LeafletState = {\n  selectedLayer: MapLayerValue | undefined;\n};\n\nexport enum SubmissionStatus {\n  submitting,\n  errored,\n  done,\n  none,\n}\n\nexport type TileFeature = Feature<Geometry, Tile>;\n","import _ from \"lodash\";\nimport {\n  MapLayers,\n  LayersType,\n  Elevation,\n  TerrainType,\n  FeatureType,\n  MapLayerValue,\n} from \"@tile-generator/common\";\nimport { State, TileFeature } from \"../../types\";\n\nconst fillOpacity = 0.75;\n\nexport const layersSelector = (state: State) => state.mapData.layers;\n\nexport const hasLayer = (layers: LayersType, layer: MapLayerValue) =>\n  layers[layer] ? true : false;\n\nexport const receivedLayersSelector = (state: State) => {\n  const layers = state.mapData.layers;\n  const receivedLayers: Record<string, boolean> = _.fromPairs(\n    (Object.values(MapLayers) as MapLayerValue[])\n      .filter((key: MapLayerValue) => typeof key === \"string\")\n      .map((key: MapLayerValue) => [key, hasLayer(layers, key)])\n  );\n  return receivedLayers;\n};\n\nexport const selectedLayer = (state: State) => {\n  const layerName = state.leaflet.selectedLayer;\n  return layerName === undefined ? [] : state.mapData.layers[layerName] || [];\n};\n\nexport const mapFeatureToStyle: L.StyleFunction = (\n  feature: TileFeature | undefined\n) => {\n  if (feature === undefined || feature.properties === undefined) {\n    return {};\n  } else {\n    const color = (() => {\n      switch (feature.properties.terrain) {\n        case TerrainType.coast:\n          return { color: \"cyan\" };\n        case TerrainType.ocean:\n          return { color: \"blue\" };\n        case TerrainType.grass:\n          return { color: \"green\" };\n        case TerrainType.plains:\n          return { color: \"gold\" };\n        case TerrainType.desert:\n          return { color: \"sandybrown\" };\n        case TerrainType.tundra:\n          return { color: \"grey\" };\n        case TerrainType.ice:\n          return { color: \"white\" };\n        default:\n          return {};\n      }\n    })();\n\n    const elevation = (() => {\n      switch (feature.properties.elevation) {\n        case Elevation.flat:\n          if (feature.properties.terrain !== TerrainType.coast)\n            return { fillColor: \"BlanchedAlmond\" };\n          return {};\n        case Elevation.hills:\n          return { fillColor: \"Burlywood\", fillOpacity };\n        case Elevation.mountain:\n          return { fillColor: \"SaddleBrown\", fillOpacity };\n        default:\n      }\n      return {};\n    })();\n\n    const terrainFeature = (() => {\n      switch (feature.properties.feature) {\n        case FeatureType.forest:\n          return { fillColor: \"ForestGreen\", fillOpacity };\n        case FeatureType.jungle:\n          return { fillColor: \"DarkGreen\", fillOpacity };\n        case FeatureType.marsh:\n          return { fillColor: \"LimeGreen\", fillOpacity };\n        default:\n          return {};\n      }\n    })();\n\n    const rivers = (() => {\n      if (\n        !feature.properties.river ||\n        _.isEqual(feature.properties.river, {})\n      ) {\n        return {};\n      } else {\n        return { fillColor: \"blue\" };\n      }\n    })();\n\n    return { ...elevation, ...color, ...terrainFeature, ...rivers };\n  }\n};\n","import { LatLngBounds } from \"leaflet\";\nimport { MapOptions, Options } from \"@tile-generator/common\";\n\ntype Action = ReturnType<typeof changeOptions>;\n\nconst initialState: MapOptions = {\n  dimensions: { width: 20, height: 20 },\n  format: \"Civ VI\",\n  bounds: {\n    _southWest: { lat: 37, lng: -121 },\n    _northEast: { lat: 38, lng: -120 },\n  },\n};\n\nconst CHANGE_OPTIONS = \"CHANGE_OPTIONS\";\nconst CHANGE_BOUNDS = \"CHANGE_BOUNDS\";\n\nexport const changeOptions = (options: Partial<Options>) => ({\n  type: CHANGE_OPTIONS,\n  payload: { ...options },\n});\n\nexport const resetOptions = () => ({\n  type: CHANGE_OPTIONS,\n  payload: { format: initialState.format, dimensions: initialState.dimensions },\n});\n\nexport const changeBounds = (bounds: LatLngBounds) => ({\n  type: CHANGE_BOUNDS,\n  payload: { bounds },\n});\n\nexport const settings = (state = initialState, { type, payload }: Action) => {\n  switch (type) {\n    case CHANGE_OPTIONS:\n    case CHANGE_BOUNDS:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n","import L from \"leaflet\";\nimport { createRawHexGrid } from \"@tile-generator/common\";\nimport { Dimensions, Tile } from \"@tile-generator/common\";\nimport { LineString, Polygon } from \"geojson\";\n\nexport const createPreviewGrid = (\n  bounds: L.LatLngBounds,\n  dimensions: Dimensions\n) => {\n  const { width, height } = dimensions;\n  return createRawHexGrid({\n    width,\n    height,\n    lon_start: bounds.getWest(),\n    lon_end: bounds.getEast(),\n    lat_start: bounds.getNorth(),\n    lat_end: bounds.getSouth(),\n  });\n};\n\nexport const drawLayer = (\n  grid: Polygon[],\n  layer: Tile[],\n  style: L.StyleFunction\n) =>\n  L.geoJSON(\n    {\n      type: \"FeatureCollection\",\n      // @ts-ignore\n      features: grid.map((hex, i) => ({\n        geometry: hex,\n        properties: layer[i],\n        type: \"Feature\",\n      })),\n    },\n    { style }\n  );\n\nexport const drawRivers = (riverLines: LineString[]) =>\n  L.geoJSON(\n    {\n      type: \"GeometryCollection\",\n      // @ts-ignore\n      features: riverLines,\n    },\n    {\n      style: () => ({\n        color: \"blue\",\n        opacity: 0.5,\n      }),\n    }\n  );\n","import L from \"leaflet\";\nimport { useEffect, useMemo, useState, useCallback } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport { MapOptions, MapLayerValue, Tile } from \"@tile-generator/common\";\nimport { createPreviewGrid, drawLayer, drawRivers } from \"./utils\";\nimport { LineString, Polygon } from \"geojson\";\nimport { mapFeatureToStyle } from \"../../redux/modules/leaflet/selectors\";\nimport { SubmissionStatus } from \"../../redux/types\";\n\nexport const useLeafletMap = () => {\n  const [map, setMap] = useState<L.Map>();\n\n  useEffect(() => {\n    const map = L.map(\"map\").setView([38, -122], 4);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map);\n\n    // The map will load initially at a smaller size, then fail\n    // to update properly for a larger size\n    // This doesn't appear to be linked to load/resize events\n    setTimeout(() => {\n      map.invalidateSize();\n    }, 100);\n\n    setMap(map);\n  }, []);\n\n  return map;\n};\n\nexport const useLayer = (\n  map: L.Map | undefined,\n  initialLayer?: L.Layer | undefined\n) => {\n  const [layer, setLayer] = useState(initialLayer);\n  const [previousLayer, setPreviousLayer] = useState<L.Layer>();\n\n  // todo: update layer instead of adding + removing\n  useEffect(() => {\n    if (map === undefined) return;\n    if (previousLayer) map.removeLayer(previousLayer);\n    if (layer !== undefined) {\n      layer.addTo(map);\n    }\n  }, [layer, previousLayer, map]);\n\n  return useCallback(\n    (newLayer: L.Layer | undefined) => {\n      setLayer(newLayer);\n      setPreviousLayer(layer);\n    },\n    [setLayer, setPreviousLayer, layer]\n  );\n};\n\nexport const useAreaSelect = (\n  map: L.Map | undefined,\n  onBoundsChange: (bounds: L.LatLngBounds) => void,\n  submissionStatus: SubmissionStatus\n) => {\n  const [previous, setPrevious] = useState<L.AreaSelect>();\n\n  const areaSelect = useMemo(() => {\n    if (!map || submissionStatus !== SubmissionStatus.none) return;\n    const areaSelect = L.areaSelect({\n      width: 300,\n      height: 300 * (10 / (10 + 0.5)),\n      keepAspectRatio: true,\n    });\n    areaSelect.addTo(map);\n\n    onBoundsChange(areaSelect.getBounds());\n\n    return areaSelect;\n  }, [map, onBoundsChange, submissionStatus]);\n\n  useEffect(() => {\n    if (areaSelect) setPrevious(areaSelect);\n  }, [areaSelect]);\n\n  useEffect(() => {\n    if (!areaSelect && previous) {\n      previous.remove();\n      setPrevious(undefined);\n    }\n  }, [previous, areaSelect]);\n\n  return areaSelect;\n};\n\nexport const useRiverLayer = (\n  map: L.Map | undefined,\n  selectedLayer: MapLayerValue | undefined,\n  riverLines: LineString[]\n) => {\n  const setRivers = useLayer(map);\n  // TODO: when using useMemo, rivers don't show\n  const leafletLayer = (() => {\n    if (selectedLayer === \"rivers\") return drawRivers(riverLines);\n    else return undefined;\n  })();\n\n  useEffect(() => {\n    setRivers(leafletLayer);\n  }, [leafletLayer, setRivers]);\n};\n\nexport const useTileLayer = (\n  map: L.Map | undefined,\n  grid: Polygon[],\n  layer: Tile[]\n) => {\n  const setLayer = useLayer(map);\n  const leafletLayer = useMemo(\n    () => drawLayer(grid, layer, mapFeatureToStyle),\n    [grid, layer]\n  );\n\n  useEffect(() => {\n    setLayer(leafletLayer);\n  }, [setLayer, leafletLayer]);\n};\n\nexport const usePreviewLayer = (\n  map: L.Map | undefined,\n  areaSelect: L.AreaSelect | undefined,\n  onBoundsChange: (bounds: L.LatLngBounds) => void,\n  settings: MapOptions\n) => {\n  const grid = useMemo(() => {\n    if (!map || !areaSelect) return;\n    return drawLayer(\n      // todo: change on bounds changing as well\n      // todo: if bounds have changed but not dimensions, just transform the previous layer\n      // https://github.com/w8r/Leaflet.Path.Transform\n      createPreviewGrid(areaSelect.getBounds(), settings.dimensions),\n      [],\n      () => ({\n        opacity: 0.2,\n        color: \"black\",\n      })\n    );\n  }, [map, areaSelect, settings]);\n\n  const setPreview = useLayer(map, grid);\n\n  useEffect(() => {\n    if (!areaSelect) return;\n\n    const handler = () => {\n      onBoundsChange(areaSelect.getBounds());\n      setPreview(grid);\n    };\n    // @ts-ignore\n    areaSelect.on(\"change\", handler);\n    // @ts-ignore\n    return () => areaSelect.off(\"change\", handler);\n  }, [areaSelect, setPreview, onBoundsChange, grid]);\n\n  useDebounce(\n    () => {\n      setPreview(grid);\n    },\n    200,\n    [grid, settings] //todo: setpreview\n  );\n};\n","import React from \"react\";\n\nimport \"../areaselect/areaselect\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./styles.css\";\nimport \"../areaselect/areaselect.css\";\n\nimport { LatLngBounds } from \"leaflet\";\nimport { Polygon, LineString } from \"geojson\";\nimport { Tile, MapLayerValue, MapOptions } from \"@tile-generator/common\";\nimport { selectedLayer } from \"../../redux/modules/leaflet/selectors\";\nimport { connect, MapStateToProps } from \"react-redux\";\nimport { State, SubmissionStatus } from \"../../redux/types\";\nimport { changeBounds } from \"../../redux/modules/settings\";\nimport {\n  useLeafletMap,\n  useAreaSelect,\n  usePreviewLayer,\n  useTileLayer,\n  useRiverLayer,\n} from \"./hooks\";\n\ntype MapProps = DispatchProps & StateProps;\n\ntype StateProps = {\n  grid: Polygon[];\n  layer: Tile[];\n  riverLines: LineString[];\n  selectedLayer: MapLayerValue | undefined;\n  settings: MapOptions;\n  submissionStatus: SubmissionStatus;\n};\n\ntype DispatchProps = {\n  onBoundsChange: (bounds: LatLngBounds) => any;\n};\n\nconst mapStateToProps: MapStateToProps<StateProps, {}, State> = (state) => ({\n  grid: state.mapData.grid,\n  layer: selectedLayer(state),\n  riverLines: state.mapData.riverLines,\n  selectedLayer: state.leaflet.selectedLayer,\n  settings: state.settings,\n  submissionStatus: state.mapData.submissionStatus,\n});\n\nconst mapDispatchToProps = {\n  onBoundsChange: changeBounds,\n};\n\nconst Map: React.FC<MapProps> = ({\n  onBoundsChange,\n  settings,\n  selectedLayer,\n  riverLines,\n  grid,\n  layer,\n  submissionStatus,\n}) => {\n  const map = useLeafletMap();\n  const areaSelect = useAreaSelect(map, onBoundsChange, submissionStatus);\n\n  usePreviewLayer(map, areaSelect, onBoundsChange, settings);\n  useRiverLayer(map, selectedLayer, riverLines);\n  useTileLayer(map, grid, layer);\n\n  return <div id=\"map\" />;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n","import { SubmissionStatus } from \"../../types\";\nimport { LayersType } from \"@tile-generator/common\";\nimport { LineString } from \"geojson\";\n\nexport const SUBMITTING = \"SUBMITTING\";\nexport const RECEIVE_LAYER = \"RECEIVE_LAYER\";\nexport const RECEIVE_GRID = \"RECEIVE_GRID\";\nexport const FINISHED_MAP = \"FINISHED_MAP\";\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const RECEIVE_LINES = \"RECEIVE_LINES\";\nexport const RESET_MAP = \"RESET_MAP\";\n\nexport const finishedMap = () => ({\n  type: FINISHED_MAP,\n  payload: {\n    loadingLayer: {\n      index: 0,\n      name: undefined,\n    },\n    submissionStatus: SubmissionStatus.done,\n  },\n});\n\nexport const submitError = (errorMessage: string) => ({\n  type: FINISHED_MAP,\n  payload: {\n    loadingLayer: {\n      index: 0,\n      name: undefined,\n    },\n    errorMessage,\n    submissionStatus: SubmissionStatus.errored,\n  },\n});\n\nexport const clearError = () => ({\n  type: CLEAR_ERROR,\n  payload: { errorMessage: undefined, submissionStatus: SubmissionStatus.none },\n});\n\nexport const receiveGrid = (payload: any) => ({\n  type: RECEIVE_GRID,\n  payload,\n});\n\nexport const resetMap = () => ({\n  type: RESET_MAP,\n});\n\nexport const submitting = () => ({\n  type: SUBMITTING as typeof SUBMITTING,\n  payload: {\n    errorMessage: undefined,\n    submissionStatus: SubmissionStatus.submitting,\n  },\n});\n\nexport const receiveLayerAction = (data: { layer: LayersType }) => ({\n  payload: { layer: data.layer },\n  type: RECEIVE_LAYER as typeof RECEIVE_LAYER,\n});\n\nexport const receiveRiverLines = (lines: LineString[]) => ({\n  payload: lines,\n  type: RECEIVE_LINES,\n});\n","import { State, SubmissionStatus } from \"../../types\";\n\nexport const isLastLayer = (state: State) =>\n  state.mapData.totalLayers !== undefined &&\n  state.mapData.totalLayers === state.mapData.loadingLayer.index;\n\nexport const progress = ({\n  mapData: {\n    totalLayers,\n    submissionStatus,\n    loadingLayer: { index },\n  },\n}: State) => {\n  if (submissionStatus === SubmissionStatus.done) return 1;\n  return totalLayers != null && index != null ? index / totalLayers : 0;\n};\n\nexport const selectMapId = (state: State) => state.mapData.mapId;\nexport const selectOptions = (state: State) => state.settings;\n","import {\n  receiveLayerAction,\n  finishedMap,\n  receiveGrid,\n  receiveRiverLines,\n} from \"./actions\";\nimport { isLastLayer } from \"./selectors\";\nimport { State } from \"../../types\";\nimport { MapDispatch } from \"./types\";\nimport { LayersType, RiverType } from \"@tile-generator/common\";\nimport { BACKEND_URL } from \"../../../constants/values\";\nimport { LineString } from \"geojson\";\nimport { mapRiverToLine } from \"@tile-generator/common\";\n\nconst createEventSource = (event: string, callback: (e: Event) => any) => {\n  let eventSource = new EventSource(event);\n  eventSource.addEventListener(\"layer\", callback);\n\n  return () => eventSource.removeEventListener(\"layer\", callback);\n};\n\nconst splitRivers = (layer: LayersType) => (\n  dispatch: MapDispatch,\n  getState: () => State\n) => {\n  const { rivers } = layer;\n  const {\n    mapData: { grid },\n  } = getState();\n  if (!rivers) return;\n\n  const lines = rivers.flatMap((tile, i) => {\n    if (!tile.river) return [];\n    const poly = grid[i];\n    const lines: LineString[] = (Object.entries(tile.river) as [\n      keyof RiverType,\n      boolean\n    ][])\n      .map(([direction, bool]) =>\n        bool ? mapRiverToLine(poly, direction) : null\n      )\n      .filter((elem) => elem !== null) as LineString[];\n    return lines;\n  });\n  dispatch(receiveRiverLines(lines));\n};\n\nconst receiveLayer = (e: Event) => async (\n  dispatch: MapDispatch,\n  getState: () => State\n) => {\n  const data = JSON.parse((e as any).data);\n  dispatch(receiveLayerAction(data));\n  dispatch(splitRivers(data.layer));\n  console.log(getState());\n  if (isLastLayer(getState())) {\n    dispatch(finishedMap());\n  }\n};\n\nexport const receiveLayers = (resp: Response) => async (\n  dispatch: MapDispatch\n) => {\n  const res = await resp.json();\n\n  const removeSSEListener = createEventSource(\n    `${BACKEND_URL}/updates/${res.id}`,\n    (e: Event) => dispatch(receiveLayer(e))\n  );\n\n  dispatch(\n    receiveGrid({\n      grid: res.grid,\n      totalLayers: res.nLayers,\n      layers: {},\n      mapId: res.id,\n      removeSSEListener,\n    })\n  );\n};\n","import {\n  RECEIVE_LAYER,\n  FINISHED_MAP,\n  RECEIVE_LINES,\n  SUBMITTING,\n  RESET_MAP,\n} from \"./actions\";\nimport { MapData, SubmissionStatus } from \"../../types\";\nimport { Action } from \"./types\";\n\nexport const map = (\n  state = initialState,\n  { type, payload }: Action\n): MapData => {\n  switch (type) {\n    case RECEIVE_LAYER:\n      return {\n        ...state,\n        layers: { ...state.layers, ...payload.layer },\n        loadingLayer: { index: state.loadingLayer.index + 1 },\n      };\n    case RECEIVE_LINES:\n      return {\n        ...state,\n        riverLines: payload,\n      };\n    case SUBMITTING:\n      return {\n        ...initialState,\n        ...payload,\n        submissionStatus: SubmissionStatus.submitting,\n      };\n    case FINISHED_MAP:\n      if (state.removeSSEListener) state.removeSSEListener();\n      return {\n        ...state,\n        ...payload,\n        submissionStatus: SubmissionStatus.done,\n        removeSSEListener: undefined,\n      };\n    case RESET_MAP:\n      // TODO: cancel serverside as well\n      if (state.removeSSEListener) state.removeSSEListener();\n      return initialState;\n    default:\n      return { ...state, ...payload };\n  }\n};\n\nconst initialState: MapData = {\n  grid: [],\n  layers: {},\n  loadingLayer: {\n    index: 0,\n  },\n  riverLines: [],\n  submissionStatus: SubmissionStatus.none,\n};\n","import React from \"react\";\nimport { Slider } from \"baseui/slider\";\nimport * as colors from \"../../constants/colors\";\n\ninterface TileSliderProps {\n  value: number;\n  onChange: (value: number) => void;\n  max: number;\n  min: number;\n}\n\nconst TileSlider: React.FC<TileSliderProps> = ({\n  value,\n  onChange,\n  ...rest\n}) => (\n  <Slider\n    value={[value]}\n    onChange={(e) => onChange(e.value[0])}\n    {...rest}\n    overrides={{\n      Root: {\n        style: () => ({\n          width: \"75%\",\n          height: \"16px\",\n        }),\n      },\n      Track: {\n        style: () => ({\n          paddingTop: \"8px\",\n          paddingLeft: \"1px\",\n          paddingRight: \"1px\",\n          paddingBottom: \"5px\",\n          marginRight: \"0px\",\n        }),\n      },\n      TickBar: () => null,\n      InnerThumb: () => null,\n      ThumbValue: () => null,\n      InnerTrack: {\n        style: () => ({\n          background: colors.textFieldGrey,\n          height: \"24px\",\n        }),\n      },\n      Thumb: {\n        style: () => ({\n          height: \"18px\",\n          width: \"16px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          borderStyle: \"solid\",\n          borderWidth: \"3px\",\n          borderColor: \"#ccc\",\n          backgroundColor: \"#fff\",\n        }),\n      },\n    }}\n  />\n);\n\nexport default TileSlider;\n","export const textFieldGrey = \"#363636\";\nexport const backgroundGrey = \"#232323\";\nexport const textColorWhite = \"#ebebeb\";\n","import React from \"react\";\nimport { clamp } from \"lodash\";\nimport { Input, SIZE } from \"baseui/input\";\nimport * as colors from \"../../constants/colors\";\n\ninterface TileSliderProps {\n  value: number;\n  onChange: (value: number) => void;\n  max: number;\n  min: number;\n}\n\nconst TileInput: React.FC<TileSliderProps> = ({ onChange, value, ...rest }) => {\n  const [typedValue, setTypedValue] = React.useState(\"\");\n  const [focused, setFocused] = React.useState(false);\n\n  const numberValue = parseInt(typedValue);\n  const isValid = numberValue >= 10 && numberValue <= 120;\n\n  return (\n    <Input\n      endEnhancer=\"tiles\"\n      onChange={(event) => {\n        setTypedValue((event.target as any).value.slice(0, 3));\n      }}\n      onBlur={() => {\n        setFocused(false);\n        setTypedValue(\"\");\n\n        if (isValid) onChange(numberValue);\n        else if (!Number.isNaN(numberValue)) {\n          const clamped = clamp(numberValue, 10, 120);\n          onChange(clamped);\n        }\n      }}\n      onFocus={() => setFocused(true)}\n      size={SIZE.mini}\n      error={!isValid}\n      value={focused ? typedValue : value}\n      {...rest}\n      overrides={{\n        Root: {\n          style: () => ({\n            width: \"15%\",\n            height: \"24px\",\n            marginRight: \"20px\",\n            marginLeft: \"20px\",\n            marginTop: \"8px\",\n            background: colors.textFieldGrey,\n          }),\n        },\n        EndEnhancer: {\n          style: () => ({\n            fontFamily: \"Avenir\",\n            fontSize: \"12px\",\n            backgroundColor: colors.textFieldGrey,\n            color: colors.textColorWhite,\n          }),\n        },\n        Input: {\n          style: () => ({\n            fontFamily: \"Avenir\",\n            fontSize: \"12px\",\n            backgroundColor: colors.textFieldGrey,\n            color: colors.textColorWhite,\n          }),\n        },\n        InputContainer: {\n          style: () => ({\n            borderColor: colors.textFieldGrey,\n          }),\n        },\n      }}\n    />\n  );\n};\n\nexport default TileInput;\n","import React from \"react\";\nimport { SIZE } from \"baseui/input\";\nimport { Select } from \"baseui/select\";\nimport * as colors from \"../../constants/colors\";\nimport { GameString, gameStrings, Options } from \"@tile-generator/common\";\nimport { changeOptions } from \"../../redux/modules/settings\";\nimport { State } from \"../../redux/types\";\nimport { connect } from \"react-redux\";\n\ninterface SelectMenuProps {\n  format: GameString;\n  changeOptions: (options: Partial<Options>) => void;\n}\n\nconst mapStateToProps = (state: State) => ({\n  format: state.settings.format,\n});\n\nconst mapDispatchToProps = {\n  changeOptions,\n};\n\nconst formatDisplayNames: { [k in GameString]: string } = {\n  \"Civ V\": \"Civilization V\",\n  \"Civ VI\": \"Civilization VI\",\n};\n\nconst options = gameStrings.map((format) => ({\n  id: format,\n  label: formatDisplayNames[format],\n}));\n\nconst SelectMenu: React.FC<SelectMenuProps> = ({ format, changeOptions }) => (\n  <Select\n    clearable={false}\n    size={SIZE.mini}\n    value={[{ id: format }]}\n    options={options}\n    searchable={false}\n    onChange={(val) => changeOptions({ format: val.value[0].id as GameString })}\n    overrides={{\n      Popover: {\n        props: {\n          overrides: {\n            Body: { style: () => ({ zIndex: 200 }) },\n          },\n        },\n      },\n      Root: {\n        style: () => ({\n          width: \"100%\",\n          height: \"10px\",\n          marginTop: \"10px\",\n          marginLeft: \"6.19px\",\n          marginRight: \"111.25px\",\n          padding: \"0px\",\n          background: colors.textFieldGrey,\n          borderRadius: \"2px\",\n        }),\n      },\n      ValueContainer: {\n        style: () => ({\n          paddingLeft: \"10px\",\n          background: colors.textFieldGrey,\n          color: colors.textColorWhite,\n        }),\n      },\n      ControlContainer: {\n        style: () => ({\n          borderRadius: \"2px\",\n          border: \"none\",\n        }),\n      },\n      IconsContainer: {\n        style: () => ({\n          background: colors.textFieldGrey,\n          borderColor: colors.textFieldGrey,\n          border: \"0px\",\n        }),\n      },\n      SelectArrow: {\n        style: () => ({\n          color: colors.textColorWhite,\n        }),\n      },\n      DropdownContainer: {\n        style: () => ({\n          backgroundColor: colors.textFieldGrey,\n        }),\n      },\n      SearchIconContainer: {\n        style: () => ({\n          borderRadius: \"2px\",\n        }),\n      },\n      Dropdown: {\n        style: () => ({\n          backgroundColor: colors.textFieldGrey,\n          paddingBottom: \"0px\",\n          paddingTop: \"0px\",\n        }),\n      },\n      DropdownListItem: {\n        style: () => ({\n          backgroundColor: colors.textFieldGrey,\n          paddingBottom: \"4px\",\n          paddingTop: \"4px\",\n        }),\n      },\n      OptionContent: {\n        style: () => ({\n          color: colors.textColorWhite,\n          fontFamily: \"Avenir\",\n          fontSize: \"12px\",\n        }),\n      },\n    }}\n  />\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMenu);\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\ninterface ControlButtonsProps {\n  children: React.ReactNode;\n}\n\nexport const ControlButtons: React.FC<ControlButtonsProps> = ({ children }) => (\n  <div className={styles.btn_container}>{children}</div>\n);\n\nexport default ControlButtons;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\ntype ButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n> & { primary?: boolean; children?: React.ReactNode };\n\nconst Button: React.FC<ButtonProps> = ({ primary, children, ...props }) => (\n  <button\n    className={primary ? styles.primary_button : styles.button}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { Options } from \"@tile-generator/common\";\nimport { submit } from \"../../redux/modules/map\";\nimport { changeOptions, resetOptions } from \"../../redux/modules/settings\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../../redux/types\";\nimport TileSlider from \"./TileSlider\";\nimport TileInput from \"./TileInput\";\nimport SelectMenu from \"./SelectMenu\";\nimport { ControlButtons } from \"../ControlButtons\";\nimport styles from \"./styles.module.css\";\nimport Button from \"../Button\";\n\nconst widthParams = { min: 10, max: 120 };\n\ninterface OptionsProps {\n  onSubmit: () => void;\n  selectedOptions: Options;\n  onChange: (options: Options) => void;\n  resetOptions: () => void;\n}\n\nconst mapStateToProps = (state: State) => ({\n  selectedOptions: {\n    format: state.settings.format,\n    dimensions: state.settings.dimensions,\n  },\n});\n\nconst mapDispatchToProps = {\n  onChange: changeOptions,\n  onSubmit: submit,\n  resetOptions,\n};\n\nexport const OptionsComponent: React.FC<OptionsProps> = ({\n  onChange,\n  onSubmit,\n  selectedOptions,\n  resetOptions,\n}) => {\n  return (\n    <>\n      <div className={styles.header}>MAP OPTIONS</div>\n      {([\"width\", \"height\"] as Array<\"width\" | \"height\">).map((title) => (\n        <InputRow\n          selectedOptions={selectedOptions}\n          onChange={onChange}\n          title={title}\n          field={title}\n          key={title}\n          {...widthParams}\n        />\n      ))}\n      <div className={styles.horizontal_containers}>\n        <div className={styles.left_headers}>Format</div>\n        <SelectMenu />\n      </div>\n      <ControlButtons>\n        <Button primary onClick={onSubmit}>\n          Generate\n        </Button>\n        <Button onClick={resetOptions}>Reset</Button>\n      </ControlButtons>\n    </>\n  );\n};\n\ninterface InputRowProps {\n  title: string;\n  min: number;\n  max: number;\n  selectedOptions: Options;\n  onChange: (options: Options) => void;\n  field: \"width\" | \"height\";\n}\n\nconst InputRow: React.FC<InputRowProps> = ({\n  selectedOptions,\n  min,\n  max,\n  title,\n  field,\n  onChange,\n}) => {\n  const props = {\n    value: selectedOptions.dimensions[field],\n    min,\n    max,\n    onChange: (value: number) =>\n      onChange({\n        ...selectedOptions,\n        dimensions: { ...selectedOptions.dimensions, [field]: value },\n      }),\n  };\n  return (\n    <div className={styles.horizontal_containers}>\n      <div className={styles.left_headers}>{title}</div>\n      <TileSlider {...props} />\n      <TileInput {...props} />\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsComponent);\n","import { State } from \"../../types\";\nimport download from \"downloadjs\";\nimport { submitError, submitting } from \"./actions\";\nimport { selectOptions } from \"./selectors\";\nimport { MapDispatch } from \"./types\";\nimport { receiveLayers } from \"./thunkActions\";\nimport { BACKEND_URL } from \"../../../constants/values\";\n\nexport const submit = () => (dispatch: MapDispatch, getState: () => State) => {\n  dispatch(submitting());\n  const options = selectOptions(getState());\n\n  return fetch(`${BACKEND_URL}/api/map`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(options),\n  }).then(\n    (resp) => dispatch(receiveLayers(resp)),\n    (error) => dispatch(submitError(error))\n  );\n};\n\nexport const downloadMap = () => async (\n  dispatch: MapDispatch,\n  getState: () => State\n) => {\n  const { mapId } = getState().mapData;\n  const resp = await fetch(`${BACKEND_URL}/api/map/${mapId}`);\n\n  if (resp.status === 404)\n    dispatch(submitError(`Map file '${mapId}' does not exist`));\n  else {\n    const filename =\n      resp.headers?.get(\"Content-Disposition\")?.split(\"filename=\")[1] ||\n      \"generated-map.Civ6Map\";\n    const blob = await resp.blob();\n\n    download(blob, filename);\n  }\n};\n","export const BACKEND_URL = \"http://localhost:8080\";\n","import { LeafletState } from \"../../types\";\nimport { SELECT_LAYER } from \"./actionTypes\";\nimport { SUBMITTING, RECEIVE_LAYER } from \"../map/actions\";\nimport { receiveLayerAction, submitting } from \"../map\";\nimport { MapLayerValue } from \"@tile-generator/common\";\n\nconst initialState: LeafletState = {\n  selectedLayer: undefined,\n};\n\ntype Action =\n  | ReturnType<typeof selectLayer>\n  | ReturnType<typeof receiveLayerAction>\n  | ReturnType<typeof submitting>;\n\nexport const selectLayer = (layerName: MapLayerValue) => ({\n  type: SELECT_LAYER as typeof SELECT_LAYER,\n  payload: { layerName },\n});\n\nexport const leaflet = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SUBMITTING:\n      return { ...state, selectedLayer: undefined };\n    case SELECT_LAYER:\n      return { selectedLayer: action.payload.layerName };\n    case RECEIVE_LAYER:\n      // If receiving a layer for the first time, set this one to selected\n      if (state.selectedLayer === undefined) {\n        return {\n          ...state,\n          selectedLayer: Object.keys(action.payload.layer)[0] as MapLayerValue,\n        };\n      }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProgressBar } from \"baseui/progress-bar\";\nimport styles from \"./styles.module.css\";\nimport Button from \"../Button\";\nimport ControlButtons from \"../ControlButtons\";\nimport { State, SubmissionStatus } from \"../../redux/types\";\nimport { progress, downloadMap, resetMap } from \"../../redux/modules/map\";\nimport { receivedLayersSelector } from \"../../redux/modules/leaflet/selectors\";\nimport { selectLayer } from \"../../redux/modules/leaflet\";\nimport { MapLayerValue } from \"@tile-generator/common\";\nimport * as colors from \"../../constants/colors\";\n\ntype MapLoaderProps = DispatchProps & StateProps;\n\ntype StateProps = {\n  selectedLayer: MapLayerValue | undefined;\n  receivedLayers: Record<MapLayerValue, boolean>;\n  loadingLayer?: string;\n  progress: number;\n  submissionStatus: SubmissionStatus;\n};\n\ntype DispatchProps = {\n  onLayerSelect: (option: MapLayerValue) => void;\n  downloadMap: () => void;\n  resetMap: () => void;\n};\n\nconst mapStateToProps = (state: State) => ({\n  progress: progress(state),\n  selectedLayer: state.leaflet.selectedLayer,\n  receivedLayers: receivedLayersSelector(state),\n  loadingLayer: state.mapData.loadingLayer.name,\n  submissionStatus: state.mapData.submissionStatus,\n});\n\nconst mapDispatchToProps = {\n  onLayerSelect: selectLayer,\n  downloadMap,\n  resetMap,\n};\n\nexport const MapLoader: React.FC<MapLoaderProps> = ({\n  progress,\n  downloadMap,\n  receivedLayers,\n  submissionStatus,\n  onLayerSelect,\n  resetMap,\n  selectedLayer,\n}) => {\n  const [downloaded, setDownloaded] = React.useState(false);\n  return (\n    <>\n      <div className={styles.header}>\n        {progress < 1 ? \"Building map...\" : \"Finished building\"}\n      </div>\n      <div className={styles.component_array}>\n        {(Object.entries(receivedLayers) as [MapLayerValue, boolean][]).map(\n          ([layer, enabled]) => (\n            <button\n              onClick={() => onLayerSelect(layer)}\n              className={\n                selectedLayer === layer ? styles.button_selected : styles.button\n              }\n              disabled={!enabled}\n            >\n              {layer}\n            </button>\n          )\n        )}\n      </div>\n      <ProgressBar\n        value={progress}\n        successValue={1}\n        overrides={{\n          BarProgress: {\n            style: () => {\n              return {\n                position: \"relative\",\n                backgroundcolor: \"#4d90e6\",\n              };\n            },\n          },\n          Bar: {\n            style: ({ $theme }) => ({\n              height: $theme.sizing.scale300,\n              marginLeft: \"30px\",\n              marginRight: \"30px\",\n              backgroundColor: colors.textFieldGrey,\n            }),\n          },\n        }}\n      />\n      <ControlButtons>\n        <Button\n          primary={!downloaded}\n          onClick={() => {\n            setDownloaded(true);\n            downloadMap();\n          }}\n          disabled={downloaded || submissionStatus !== SubmissionStatus.done}\n        >\n          Download\n        </Button>\n        <Button primary={downloaded} onClick={resetMap}>\n          Reset\n        </Button>\n      </ControlButtons>\n    </>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLoader);\n","export const SELECT_LAYER = \"SELECT_LAYER\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./styles.module.css\";\nimport Options from \"../Options\";\nimport MapLoader from \"../MapLoader\";\nimport { State, SubmissionStatus } from \"../../redux/types\";\n\nconst mapStateToProps = (state: State) => ({\n  mapInProgress:\n    state.mapData.submissionStatus === SubmissionStatus.submitting ||\n    state.mapData.submissionStatus === SubmissionStatus.done,\n});\n\ninterface DockProps {\n  mapInProgress: boolean;\n}\n\nexport const Dock: React.FC<DockProps> = ({ mapInProgress }) => (\n  <>\n    <div className={styles.container}>\n      {mapInProgress ? <MapLoader /> : <Options />}\n    </div>\n  </>\n);\n\nexport default connect(mapStateToProps)(Dock);\n","import React from \"react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { Provider as StyletronProvider } from \"styletron-react\";\nimport { BaseProvider, LightTheme } from \"baseui\";\n\nconst engine = new Styletron();\n\nexport const BaseWeb: React.FC = ({ children }) => (\n  <StyletronProvider value={engine}>\n    <BaseProvider theme={LightTheme}>{children}</BaseProvider>\n  </StyletronProvider>\n);\n\nexport default BaseWeb;\n","import React, { useEffect } from \"react\";\nimport { toaster, ToasterContainer, PLACEMENT } from \"baseui/toast\";\nimport { BaseWeb } from \"../../baseweb\";\nimport { Button, SIZE } from \"baseui/button\";\nimport { Block } from \"baseui/block\";\nimport styles from \"./styles.module.css\";\n\nexport const ToastError: React.FC = () => {\n  useEffect(() => {\n    const msg = (\n      <header className={styles.header}>\n        ERROR:{\" \"}\n        <div className={styles.body}>\n          Not enough land tiles. Map will fail to load in-game.\n        </div>\n      </header>\n    );\n    const info = (\n      <Block marginTop=\"15px\" display=\"flex\" justifyContent=\"center\">\n        <a\n          href=\"/Help/#errorQuestion\"\n          target=\"_blank\"\n          style={{ textDecoration: \"none\" }}\n        >\n          <Button\n            onClick={() => toaster.clear(toastID)}\n            size={SIZE.compact}\n            overrides={{\n              BaseButton: {\n                style: ({ $theme }) => ({\n                  borderRadius: \"10.5px\",\n                }),\n              },\n            }}\n          >\n            More info\n          </Button>\n        </a>\n      </Block>\n    );\n\n    const toastID = toaster.negative(\n      <>\n        {msg}\n        {info}\n      </>,\n      {\n        onClose: () => console.log(\"Toast closed.\"),\n        overrides: {\n          InnerContainer: {\n            style: { width: \"100%\" },\n          },\n        },\n      }\n    );\n  }, []);\n  return (\n    <ToasterContainer\n      placement={PLACEMENT.bottom}\n      overrides={{\n        ToastBody: {\n          style: ({ $theme }) => ({\n            backgroundColor: $theme.colors.toastNegativeBackground,\n            boxShadow: \"5px 5px 50px black\",\n            borderRadius: \"5px\",\n          }),\n        },\n      }}\n    ></ToasterContainer>\n  );\n};\n\nexport default ToastError;\n","import React from \"react\";\nimport Map from \"../../components/Map\";\nimport Dock from \"../../components/Dock\";\nimport { BaseWeb } from \"../../baseweb\";\nimport styles from \"./styles.module.css\";\nimport InstructionWindow from \"../../v2-components/InstructionWindow\";\nimport ToastError from \"../../v2-components/ToastError\";\n\nexport const MapPage: React.FC = () => (\n  <BaseWeb>\n    <div className={styles.page}>\n      <div className={styles.map_container}>\n        <Map />\n        <Dock />\n      </div>\n      <div className={styles.bottom_bar}></div>\n      <ToastError></ToastError>\n    </div>\n  </BaseWeb>\n);\n","import React from \"react\";\nimport { BaseWeb } from \"../../baseweb\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"../../components/Button\";\nimport styles from \"./styles.module.css\";\n\nexport const About: React.FC = () => (\n  <BaseWeb>\n    <div className={styles.page}>\n      <div className={styles.body}>\n        <div className={styles.intro}>\n          <h1 className={styles.landing_header}>\n            Real-world map builder for Civilization\n          </h1>\n          <p className={styles.landing_subtitle}>\n            Generate maps for Civilization V and VI using satellite data\n          </p>\n          <div className={styles.btn_container}>\n            <NavLink\n              to=\"/\"\n              style={{ textDecoration: \"none\", color: \"var(--backgroundGrey)\" }}\n            >\n              <Button primary>Get started</Button>\n            </NavLink>\n            <a\n              href=\"https://github.com/lolney/tile-generator\"\n              style={{ textDecoration: \"none\", color: \"var(--backgroundGrey)\" }}\n            >\n              <Button>Github</Button>\n            </a>\n          </div>\n        </div>\n        <video controls>\n          <source src=\"About_Video.mp4\" type=\"video/mp4\"></source>\n        </video>\n      </div>\n    </div>\n  </BaseWeb>\n);\n","import React from \"react\";\n\ninterface PathInstructionProps {\n  os: \"Mac\" | \"Windows\";\n  path: string;\n}\n\nconst PathInstruction: React.FC<PathInstructionProps> = ({ os, path }) =>\n  os === \"Mac\" ? (\n    <>\n      To find it in Finder, hold Command-Shift-G to open the \"Go to Folder...\"\n      menu, then enter:\n      <em> {path}</em>\n    </>\n  ) : (\n    <>\n      To find this folder, open File Explorer and navigate to: <em>{path}</em>\n    </>\n  );\n\nexport default PathInstruction;\n","import React from \"react\";\nimport { Instruction } from \"./types\";\nimport styles from \"./styles.module.css\";\n\ninterface InstructionListProps {\n  instruction: Instruction;\n  hideTitle?: boolean;\n  level?: number;\n}\n\nconst Step: React.FC<{\n  step: Instruction | React.ReactNode;\n  level: number;\n}> = ({ step, level }) =>\n  React.isValidElement(step) || typeof step === \"string\" ? (\n    <>{step}</>\n  ) : (\n    <BaseInstructionList instruction={step as Instruction} level={level + 1} />\n  );\n\nconst BaseInstructionList: React.FC<InstructionListProps> = ({\n  instruction: { title, steps },\n  hideTitle,\n  level = 0,\n}) => {\n  const ListType = level === 0 ? \"ol\" : \"ul\";\n  const HeaderType = level === 0 ? \"h1\" : \"h3\";\n  return (\n    <>\n      {!hideTitle && <HeaderType className={styles.header}>{title}</HeaderType>}\n      <ListType>\n        {steps.map((step, i) => (\n          <li key={i} className={styles.instructionList}>\n            <Step step={step} level={level} />\n          </li>\n        ))}\n      </ListType>\n    </>\n  );\n};\n\nexport default BaseInstructionList;\n","import React from \"react\";\nimport { Instruction } from \"./types\";\nimport PathInstruction from \"./PathInstruction\";\nimport BaseInstructionList from \"./Base\";\n\nexport const paths = {\n  Mac: \"~/Library/Application Support/Sid Meier's Civilization 5/Maps\",\n  Windows: `Program Files (x86)/Steam/SteamApps/Common/Sid Meier’s Civilization V/Assets/Maps`,\n};\n\nconst civVHelpText = (os: \"Mac\" | \"Windows\", path: string): Instruction => ({\n  title: \"Civilization V\",\n  steps: [\n    {\n      title: \"Install your map\",\n      steps: [\n        \"Install by putting the map in the Civ 5 Maps folder\",\n        <PathInstruction {...{ os, path }} />,\n      ],\n    },\n    {\n      title: \"Play your map\",\n      steps: [\n        `From the main menu, create a game via \"Single Player\" -> \"Set Up\n          Game\"`,\n        `Select \"Map Type\" -> \"Additional Maps\"`,\n        `Select the map with the name of the file you downloaded, by\n          default \"TileBuilder\"`,\n      ],\n    },\n  ],\n});\n\nexport default ({\n  os,\n  hideTitle,\n}: {\n  os: keyof typeof paths;\n  hideTitle?: boolean;\n}) => (\n  <BaseInstructionList\n    hideTitle={hideTitle}\n    instruction={civVHelpText(os, paths[os])}\n  />\n);\n","import React from \"react\";\nimport PathInstruction from \"./PathInstruction\";\nimport { Instruction } from \"./types\";\nimport BaseInstructionList from \"./Base\";\n\nexport const paths = {\n  Mac:\n    \"~/Library/Application Support/Sid Meier's CivilizationVI/Saves/WorldBuilder\",\n  Windows: `Documents/My Games/Sid Meier's CivilizationVI/Saves/WorldBuilder`,\n};\n\nconst civ6HelpText = (os: \"Mac\" | \"Windows\", path: string): Instruction => ({\n  title: \"Civilization VI\",\n  steps: [\n    {\n      title: \"Install your map\",\n      steps: [\n        \"Install by putting the map in the Civ 6 WorldBuilder folder\",\n        <PathInstruction {...{ os, path }} />,\n      ],\n    },\n    {\n      title: \"Play your map\",\n      steps: [\n        `Create a game with \"Create Game\"`,\n        `In the setup screen, click the map type under \"Choose a Map\" to open the map selector`,\n        `Find your map under \"Worldbuilder Maps\"`,\n      ],\n    },\n  ],\n});\n\nexport default ({\n  os,\n  hideTitle,\n}: {\n  os: keyof typeof paths;\n  hideTitle?: boolean;\n}) => (\n  <BaseInstructionList\n    hideTitle={hideTitle}\n    instruction={civ6HelpText(os, paths[os])}\n  />\n);\n","import React from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\nimport { StatefulTabs, Tab } from \"baseui/tabs\";\nimport { BaseWeb } from \"../../baseweb\";\nimport styles from \"./styles.module.css\";\nimport {\n  Civ5InstructionList,\n  Civ6InstructionList,\n} from \"../../components/InstructionList\";\n\nconst tabStyle = {\n  borderBottomColor: \"#4d90e6\",\n  fontSize: \"18px\",\n  fontFamily: \"Avenir\",\n};\n\nconst OSTabs: React.FC = () => (\n  <StatefulTabs\n    initialState={{ activeKey: \"0\" }}\n    overrides={{\n      TabBar: {\n        style: () => ({\n          background: \"white\",\n          width: \"170px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }),\n      },\n      TabContent: {\n        style: () => ({\n          color: \"black\",\n          fontSize: \"13px\",\n          paddingTop: \"50px\",\n          paddingBottom: \"50px\",\n        }),\n      },\n    }}\n  >\n    <Tab\n      title={\"MacOS\"}\n      overrides={{\n        Tab: { style: tabStyle },\n      }}\n    >\n      <div className={styles.contentsContainer}>\n        <div className={styles.civ5Instructions}>\n          <Civ5InstructionList os=\"Mac\" />\n        </div>\n        <div className={styles.civ6Instructions}>\n          <Civ6InstructionList os=\"Mac\" />\n        </div>\n      </div>\n    </Tab>\n    <Tab\n      title={\"Windows\"}\n      overrides={{\n        Tab: { style: tabStyle },\n      }}\n    >\n      <div className={styles.contentsContainer}>\n        <div className={styles.civ5Instructions}>\n          <Civ5InstructionList os=\"Windows\" />\n        </div>\n        <div className={styles.civ6Instructions}>\n          <Civ6InstructionList os=\"Windows\" />\n        </div>\n      </div>\n    </Tab>\n  </StatefulTabs>\n);\n\nconst FAQ: React.FC = () => (\n  <BrowserRouter>\n    <div className={styles.intro}>\n      <h1 className={styles.landing_header}>FAQ</h1>\n      <div className={styles.body}>\n        <h2 className={styles.questionHeader} id=\"errorQuestion\">\n          What does the error <em>\"Not enough land tiles...\"</em> mean?\n          <p className={styles.answerText}>\n            This means that there are not enough land (non-water) tiles for the\n            game to generate starting positions for all the civilizations. To\n            remedy this, reset and create a new map with more land tiles.\n            Alternatively, you may choose to ignore the error and manually add\n            land tiles to your map in the games's World Builder.{\" \"}\n          </p>\n        </h2>\n        <h2 className={styles.questionHeader}>Where can I report issues?</h2>\n        <p className={styles.answerText}>\n          You can report issues here:{\" \"}\n          <a href=\"https://github.com/lolney/tile-generator/issues\">\n            https://github.com/lolney/tile-generator/issues\n          </a>\n        </p>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nexport const Help: React.FC = () => (\n  <BaseWeb>\n    <div className={styles.page}>\n      <div className={styles.body}>\n        <div className={styles.intro}>\n          <h1 className={styles.landing_header}>\n            Map Installation Instructions\n          </h1>\n          <OSTabs></OSTabs>\n        </div>\n        <FAQ></FAQ>\n      </div>\n    </div>\n  </BaseWeb>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { settings } from \"./modules/settings\";\nimport { map } from \"./modules/map\";\nimport { leaflet } from \"./modules/leaflet\";\nimport { State } from \"./types\";\n\nexport const rootReducer = combineReducers<State>({\n  settings,\n  leaflet,\n  mapData: map,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { BrowserRouter, Route, NavLink } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport styles from \"./index.module.css\";\nimport \"normalize.css\";\nimport { MapPage } from \"./pages/MapPage\";\nimport { About } from \"./pages/About\";\nimport { Help } from \"./pages/Help\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store()}>\n    <BrowserRouter>\n      <div className={styles.top_bar}>\n        <div className={styles.header_container}>\n          <NavLink to=\"/\" className={styles.header}>\n            <img className={styles.logo} src=\"/logo.svg\" alt=\"logo\"></img>\n            <header>Civilization Tile Builder</header>\n          </NavLink>\n        </div>\n        <div className={styles.space}></div>\n        <div className={styles.menu_item_container}>\n          <div className={styles.button_container}>\n            <NavLink\n              to=\"/About\"\n              className={styles.menu_item}\n              activeClassName={styles.menu_item_selected}\n            >\n              About\n            </NavLink>\n          </div>\n          <div className={styles.button_container}>\n            <NavLink\n              to=\"/Help\"\n              className={styles.menu_item}\n              activeClassName={styles.menu_item_selected}\n            >\n              Help\n            </NavLink>\n          </div>\n        </div>\n      </div>\n      <Route exact path=\"/\">\n        <MapPage></MapPage>\n      </Route>\n      <Route path=\"/About\">\n        <About></About>\n      </Route>\n      <Route path=\"/Help\">\n        <Help></Help>\n      </Route>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./rootReducer\";\n\nexport const store = () =>\n  createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_bar\":\"src_top_bar__2obmK\",\"header_container\":\"src_header_container__3ZgK1\",\"header\":\"src_header__yWO2m\",\"logo\":\"src_logo__nxkEw\",\"menu_item_container\":\"src_menu_item_container__3EnIT\",\"button_container\":\"src_button_container__31Yub\",\"menu_item\":\"src_menu_item__2ELpG\",\"menu_item_selected\":\"src_menu_item_selected__28qFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_bar\":\"styles_top_bar__29i1o\",\"header\":\"styles_header__1tOdj\",\"menu_item_container\":\"styles_menu_item_container__1gyIP\",\"menu_item\":\"styles_menu_item__vlYNi\",\"menu_item_selected\":\"styles_menu_item_selected__2bVlp\",\"bottom_bar\":\"styles_bottom_bar__2YYGO\",\"intro\":\"styles_intro__Di3La\",\"landing_header\":\"styles_landing_header__2zNlB\",\"landing_subtitle\":\"styles_landing_subtitle__XOllK\",\"btn_container\":\"styles_btn_container__FEqZb\",\"button\":\"styles_button__1IxNs\",\"primary_button\":\"styles_primary_button__259jz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__V-mc3\",\"horizontal_containers\":\"styles_horizontal_containers__18MIZ\",\"left_headers\":\"styles_left_headers__t5rhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2jV2Z\",\"header\":\"styles_header__2ta6H\",\"component_array\":\"styles_component_array__2AAKj\",\"loading_bar\":\"styles_loading_bar__3aVIf\",\"button\":\"styles_button__15NJ4\",\"button_selected\":\"styles_button_selected__26scX\",\"left_headers\":\"styles_left_headers__2irQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_bar\":\"styles_top_bar__14x1w\",\"header\":\"styles_header__2xQxS\",\"menu_item_container\":\"styles_menu_item_container__1UmuX\",\"menu_item\":\"styles_menu_item__1g7-2\",\"menu_item_selected\":\"styles_menu_item_selected__1Em1E\",\"bottom_bar\":\"styles_bottom_bar__3GJtr\",\"map_container\":\"styles_map_container__1poyS\",\"page\":\"styles_page__3RV-B\"};","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst t = __importStar(require(\"io-ts\"));\nexports.gameStrings = [\"Civ V\", \"Civ VI\"];\nvar MapLayers;\n(function (MapLayers) {\n    MapLayers[MapLayers[\"climate\"] = 0] = \"climate\";\n    MapLayers[MapLayers[\"elevation\"] = 1] = \"elevation\";\n    MapLayers[MapLayers[\"forest\"] = 2] = \"forest\";\n    MapLayers[MapLayers[\"rivers\"] = 3] = \"rivers\";\n    MapLayers[MapLayers[\"marsh\"] = 4] = \"marsh\";\n})(MapLayers = exports.MapLayers || (exports.MapLayers = {}));\nvar TerrainType;\n(function (TerrainType) {\n    TerrainType[TerrainType[\"grass\"] = 0] = \"grass\";\n    TerrainType[TerrainType[\"plains\"] = 1] = \"plains\";\n    TerrainType[TerrainType[\"tundra\"] = 2] = \"tundra\";\n    TerrainType[TerrainType[\"desert\"] = 3] = \"desert\";\n    TerrainType[TerrainType[\"ice\"] = 4] = \"ice\";\n    TerrainType[TerrainType[\"coast\"] = 5] = \"coast\";\n    TerrainType[TerrainType[\"ocean\"] = 6] = \"ocean\";\n})(TerrainType = exports.TerrainType || (exports.TerrainType = {}));\nvar FeatureType;\n(function (FeatureType) {\n    FeatureType[FeatureType[\"ice\"] = 0] = \"ice\";\n    FeatureType[FeatureType[\"marsh\"] = 1] = \"marsh\";\n    FeatureType[FeatureType[\"forest\"] = 2] = \"forest\";\n    FeatureType[FeatureType[\"jungle\"] = 3] = \"jungle\";\n    FeatureType[FeatureType[\"oasis\"] = 4] = \"oasis\";\n    FeatureType[FeatureType[\"floodplains\"] = 5] = \"floodplains\";\n    FeatureType[FeatureType[\"atoll\"] = 6] = \"atoll\";\n    FeatureType[FeatureType[\"fallout\"] = 7] = \"fallout\";\n})(FeatureType = exports.FeatureType || (exports.FeatureType = {}));\nvar Elevation;\n(function (Elevation) {\n    Elevation[Elevation[\"flat\"] = 0] = \"flat\";\n    Elevation[Elevation[\"hills\"] = 1] = \"hills\";\n    Elevation[Elevation[\"mountain\"] = 2] = \"mountain\";\n})(Elevation = exports.Elevation || (exports.Elevation = {}));\n// --- Koppen climate --- //\nvar Koppen;\n(function (Koppen) {\n    Koppen[Koppen[\"Af\"] = 0] = \"Af\";\n    Koppen[Koppen[\"Am\"] = 1] = \"Am\";\n    Koppen[Koppen[\"Aw\"] = 2] = \"Aw\";\n    Koppen[Koppen[\"As\"] = 3] = \"As\";\n    Koppen[Koppen[\"BWh\"] = 4] = \"BWh\";\n    Koppen[Koppen[\"BWk\"] = 5] = \"BWk\";\n    Koppen[Koppen[\"BSh\"] = 6] = \"BSh\";\n    Koppen[Koppen[\"BSk\"] = 7] = \"BSk\";\n    Koppen[Koppen[\"Cfa\"] = 8] = \"Cfa\";\n    Koppen[Koppen[\"Cfb\"] = 9] = \"Cfb\";\n    Koppen[Koppen[\"Cfc\"] = 10] = \"Cfc\";\n    Koppen[Koppen[\"Cwa\"] = 11] = \"Cwa\";\n    Koppen[Koppen[\"Cwb\"] = 12] = \"Cwb\";\n    Koppen[Koppen[\"Cwc\"] = 13] = \"Cwc\";\n    Koppen[Koppen[\"Csa\"] = 14] = \"Csa\";\n    Koppen[Koppen[\"Csb\"] = 15] = \"Csb\";\n    Koppen[Koppen[\"Csc\"] = 16] = \"Csc\";\n    Koppen[Koppen[\"Dfa\"] = 17] = \"Dfa\";\n    Koppen[Koppen[\"Dfb\"] = 18] = \"Dfb\";\n    Koppen[Koppen[\"Dfc\"] = 19] = \"Dfc\";\n    Koppen[Koppen[\"Dfd\"] = 20] = \"Dfd\";\n    Koppen[Koppen[\"Dwa\"] = 21] = \"Dwa\";\n    Koppen[Koppen[\"Dwb\"] = 22] = \"Dwb\";\n    Koppen[Koppen[\"Dwd\"] = 23] = \"Dwd\";\n    Koppen[Koppen[\"Dwc\"] = 24] = \"Dwc\";\n    Koppen[Koppen[\"Dsa\"] = 25] = \"Dsa\";\n    Koppen[Koppen[\"Dsb\"] = 26] = \"Dsb\";\n    Koppen[Koppen[\"Dsc\"] = 27] = \"Dsc\";\n    Koppen[Koppen[\"Dsd\"] = 28] = \"Dsd\";\n    Koppen[Koppen[\"ET\"] = 29] = \"ET\";\n    Koppen[Koppen[\"EF\"] = 30] = \"EF\";\n    Koppen[Koppen[\"Ocean\"] = 31] = \"Ocean\";\n})(Koppen = exports.Koppen || (exports.Koppen = {}));\n// -------  io-ts dynamic types -------- //\nconst GameStringT = t.keyof({\n    \"Civ V\": null,\n    \"Civ VI\": null,\n});\nconst DimensionsT = t.type({ width: t.number, height: t.number });\nexports.LatLngBoundsT = t.type({\n    _southWest: t.type({ lat: t.number, lng: t.number }),\n    _northEast: t.type({ lat: t.number, lng: t.number }),\n});\nexports.MapOptionsT = t.type({\n    dimensions: DimensionsT,\n    format: GameStringT,\n    bounds: exports.LatLngBoundsT,\n});\n//# sourceMappingURL=types.js.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3pqej\",\"primary_button\":\"styles_primary_button__1Uxh2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2272J\",\"body\":\"styles_body__I5jwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2BjX0\",\"instructionList\":\"styles_instructionList__95cE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__yn_aY\"};","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./createRawHexGrid\"));\n__export(require(\"./mercatorProjection\"));\n__export(require(\"./Tile\"));\n__export(require(\"./TilesArray\"));\n__export(require(\"./types\"));\n//# sourceMappingURL=index.js.map","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_container\":\"styles_btn_container__2lipC\"};"],"sourceRoot":""}